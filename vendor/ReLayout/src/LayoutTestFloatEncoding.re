/*
 * vim: set ft=rust:
 * vim: set ft=reason:
 */

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

/**
  * @Generated by gentest/gentest.sh with the following input
  *
 {"flex_grow_within_max_width":{"style":{"width":20000,"height":10000},"children":{"child0":{"style":{"flexDirection":"Row","maxWidth":10000},"children":{"child0":{"style":{"flexGrow":"1","height":2000}}}}}},"flex_grow_within_constrained_max_width":{"style":{"width":20000,"height":10000},"children":{"child0":{"style":{"flexDirection":"Row","maxWidth":30000},"children":{"child0":{"style":{"flexGrow":"1","height":2000}}}}}},"justify_content_overflow_min_max":{"style":{"justifyContent":"JustifyCenter","minHeight":10000,"maxHeight":11000},"children":{"child0":{"style":{"width":5000,"height":5000}},"child1":{"style":{"width":5000,"height":5000}},"child2":{"style":{"width":5000,"height":5000}}}},"justify_content_min_max":{"style":{"justifyContent":"JustifyCenter","width":10000,"minHeight":10000,"maxHeight":20000},"children":{"child0":{"style":{"width":6000,"height":6000}}}},"align_items_min_max":{"style":{"alignItems":"AlignCenter","height":10000,"minWidth":10000,"maxWidth":20000},"children":{"child0":{"style":{"width":6000,"height":6000}}}},"align_items_stretch":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"height":1000}}}},"align_items_center":{"style":{"alignItems":"AlignCenter","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"height":1000}}}},"align_items_flex_start":{"style":{"alignItems":"AlignFlexStart","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"height":1000}}}},"align_items_flex_end":{"style":{"alignItems":"AlignFlexEnd","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"height":1000}}}},"align_self_center":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"alignSelf":"AlignCenter","width":1000,"height":1000}}}},"align_self_flex_end":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"alignSelf":"AlignFlexEnd","width":1000,"height":1000}}}},"align_self_flex_start":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"alignSelf":"AlignFlexStart","width":1000,"height":1000}}}},"align_self_flex_end_override_flex_start":{"style":{"alignItems":"AlignFlexStart","width":10000,"height":10000},"children":{"child0":{"style":{"alignSelf":"AlignFlexEnd","width":1000,"height":1000}}}},"border_no_size":{"style":{"borderTop":1000,"borderBottom":1000,"borderLeft":1000,"borderRight":1000}},"border_no_size_broken_out":{"style":{"borderLeft":1000,"borderRight":1000,"borderTop":1000,"borderBottom":1000}},"border_no_size_override_left":{"style":{"borderTop":2000,"borderBottom":2000,"borderLeft":2000,"borderRight":2000}},"border_no_size_override_right":{"style":{"borderTop":2000,"borderBottom":2000,"borderLeft":2000,"borderRight":2000}},"border_no_size_override_bottom":{"style":{"borderTop":2000,"borderBottom":2000,"borderLeft":2000,"borderRight":2000}},"border_container_match_child":{"style":{"borderTop":1000,"borderBottom":1000,"borderLeft":1000,"borderRight":1000},"children":{"child0":{"style":{"width":1000,"height":1000}}}},"border_stretch_child":{"style":{"width":10000,"height":10000,"borderTop":1000,"borderBottom":1000,"borderLeft":1000,"borderRight":1000},"children":{"child0":{"style":{"height":1000}}}},"border_center_child":{"style":{"justifyContent":"JustifyCenter","alignItems":"AlignCenter","width":10000,"height":10000,"borderStart":1000,"borderTop":1000,"borderEnd":2000,"borderBottom":2000},"children":{"child0":{"style":{"width":1000,"height":1000}}}},"max_width":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"maxWidth":5000,"height":1000}}}},"max_height":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"maxHeight":5000}}}},"padding_no_size":{"style":{"paddingTop":1000,"paddingBottom":1000,"paddingLeft":1000,"paddingRight":1000}},"padding_container_match_child":{"style":{"paddingTop":1000,"paddingBottom":1000,"paddingLeft":1000,"paddingRight":1000},"children":{"child0":{"style":{"width":1000,"height":1000}}}},"padding_stretch_child":{"style":{"width":10000,"height":10000,"paddingTop":1000,"paddingBottom":1000,"paddingLeft":1000,"paddingRight":1000},"children":{"child0":{"style":{"height":1000}}}},"padding_center_child":{"style":{"justifyContent":"JustifyCenter","alignItems":"AlignCenter","paddingTop":1000,"paddingBottom":2000,"width":10000,"height":10000,"paddingStart":1000,"paddingEnd":2000},"children":{"child0":{"style":{"width":1000,"height":1000}}}},"absolute_layout_width_height_start_top":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"positionType":"Absolute","top":1000,"start":1000,"width":1000,"height":1000}}}},"absolute_layout_width_height_end_bottom":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"positionType":"Absolute","bottom":1000,"endd":1000,"width":1000,"height":1000}}}},"absolute_layout_start_top_end_bottom":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"positionType":"Absolute","start":1000,"top":1000,"endd":1000,"bottom":1000}}}},"absolute_layout_width_height_start_top_end_bottom":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"height":1000,"positionType":"Absolute","start":1000,"top":1000,"endd":1000,"bottom":1000}}}},"do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent":{"style":{"flexDirection":"Row","overflow":"Hidden","width":5000,"height":5000},"children":{"child0":{"style":{"positionType":"Absolute","start":0,"top":0},"children":{"child0":{"style":{"width":10000,"height":10000}}}}}},"flex_direction_column_no_height":{"style":{"width":10000},"children":{"child0":{"style":{"height":1000}},"child1":{"style":{"height":1000}},"child2":{"style":{"height":1000}}}},"flex_direction_row_no_width":{"style":{"flexDirection":"Row","height":10000},"children":{"child0":{"style":{"width":1000}},"child1":{"style":{"width":1000}},"child2":{"style":{"width":1000}}}},"flex_direction_column":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"height":1000}},"child1":{"style":{"height":1000}},"child2":{"style":{"height":1000}}}},"flex_direction_row":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000}},"child1":{"style":{"width":1000}},"child2":{"style":{"width":1000}}}},"flex_direction_column_reverse":{"style":{"flexDirection":"ColumnReverse","width":10000,"height":10000},"children":{"child0":{"style":{"height":1000}},"child1":{"style":{"height":1000}},"child2":{"style":{"height":1000}}}},"flex_direction_row_reverse":{"style":{"flexDirection":"RowReverse","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000}},"child1":{"style":{"width":1000}},"child2":{"style":{"width":1000}}}},"wrap_column":{"style":{"flexWrap":"CssWrap","width":6000,"height":10000},"children":{"child0":{"style":{"width":3000,"height":3000}},"child1":{"style":{"width":3000,"height":3000}},"child2":{"style":{"width":3000,"height":3000}},"child3":{"style":{"width":3000,"height":3000}}}},"wrap_row":{"style":{"flexWrap":"CssWrap","flexDirection":"Row","width":10000},"children":{"child0":{"style":{"width":3000,"height":3000}},"child1":{"style":{"width":3000,"height":3000}},"child2":{"style":{"width":3000,"height":3000}},"child3":{"style":{"width":3000,"height":3000}}}},"wrap_row_align_items_flex_end":{"style":{"flexDirection":"Row","alignItems":"AlignFlexEnd","flexWrap":"CssWrap","width":10000},"children":{"child0":{"style":{"width":3000,"height":1000}},"child1":{"style":{"width":3000,"height":2000}},"child2":{"style":{"width":3000,"height":3000}},"child3":{"style":{"width":3000,"height":3000}}}},"wrap_row_align_items_center":{"style":{"flexDirection":"Row","alignItems":"AlignCenter","flexWrap":"CssWrap","width":10000},"children":{"child0":{"style":{"width":3000,"height":1000}},"child1":{"style":{"width":3000,"height":2000}},"child2":{"style":{"width":3000,"height":3000}},"child3":{"style":{"width":3000,"height":3000}}}},"margin_start":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"marginStart":1000}}}},"margin_end":{"style":{"flexDirection":"Row","justifyContent":"JustifyFlexEnd","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"marginEnd":1000}}}},"margin_left":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"marginLeft":1000}}}},"margin_top":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"height":1000,"marginTop":1000}}}},"margin_right":{"style":{"flexDirection":"Row","justifyContent":"JustifyFlexEnd","width":10000,"height":10000},"children":{"child0":{"style":{"width":1000,"marginRight":1000}}}},"margin_bottom":{"style":{"justifyContent":"JustifyFlexEnd","width":10000,"height":10000},"children":{"child0":{"style":{"height":1000,"marginBottom":1000}}}},"align_content_flex_start":{"style":{"flexDirection":"Column","alignContent":"AlignFlexStart","width":10000,"height":10000,"flexWrap":"CssWrap"},"children":{"child0":{"style":{"width":5000,"height":1000}},"child1":{"style":{"width":5000,"height":1000}},"child2":{"style":{"width":5000,"height":1000}},"child3":{"style":{"width":5000,"height":1000}},"child4":{"style":{"width":5000,"height":1000}}}},"align_content_flex_end":{"style":{"flexDirection":"Column","alignContent":"AlignFlexEnd","flexWrap":"CssWrap","width":10000,"height":10000},"children":{"child0":{"style":{"width":5000,"height":1000}},"child1":{"style":{"width":5000,"height":1000}},"child2":{"style":{"width":5000,"height":1000}},"child3":{"style":{"width":5000,"height":1000}},"child4":{"style":{"width":5000,"height":1000}}}},"align_content_center":{"style":{"flexDirection":"Column","alignContent":"AlignCenter","flexWrap":"CssWrap","width":10000,"height":10000},"children":{"child0":{"style":{"width":5000,"height":1000}},"child1":{"style":{"width":5000,"height":1000}},"child2":{"style":{"width":5000,"height":1000}},"child3":{"style":{"width":5000,"height":1000}},"child4":{"style":{"width":5000,"height":1000}}}},"align_content_stretch":{"style":{"flexDirection":"Column","alignContent":"AlignStretch","flexWrap":"CssWrap","width":10000,"height":10000},"children":{"child0":{"style":{"width":5000}},"child1":{"style":{"width":5000}},"child2":{"style":{"width":5000}},"child3":{"style":{"width":5000}},"child4":{"style":{"width":5000}}}},"justify_content_row_flex_start":{"style":{"flexDirection":"Row","justifyContent":"JustifyFlexStart","width":10200,"height":10200},"children":{"child0":{"style":{"width":1000}},"child1":{"style":{"width":1000}},"child2":{"style":{"width":1000}}}},"justify_content_row_flex_end":{"style":{"flexDirection":"Row","justifyContent":"JustifyFlexEnd","width":10200,"height":10200},"children":{"child0":{"style":{"width":1000}},"child1":{"style":{"width":1000}},"child2":{"style":{"width":1000}}}},"justify_content_row_center":{"style":{"flexDirection":"Row","justifyContent":"JustifyCenter","width":10200,"height":10200},"children":{"child0":{"style":{"width":1000}},"child1":{"style":{"width":1000}},"child2":{"style":{"width":1000}}}},"justify_content_row_space_between":{"style":{"flexDirection":"Row","justifyContent":"JustifySpaceBetween","width":10200,"height":10200},"children":{"child0":{"style":{"width":1000}},"child1":{"style":{"width":1000}},"child2":{"style":{"width":1000}}}},"justify_content_row_space_around":{"style":{"flexDirection":"Row","justifyContent":"JustifySpaceAround","width":10200,"height":10200},"children":{"child0":{"style":{"width":1000}},"child1":{"style":{"width":1000}},"child2":{"style":{"width":1000}}}},"justify_content_column_flex_start":{"style":{"justifyContent":"JustifyFlexStart","width":10200,"height":10200},"children":{"child0":{"style":{"height":1000}},"child1":{"style":{"height":1000}},"child2":{"style":{"height":1000}}}},"justify_content_column_flex_end":{"style":{"justifyContent":"JustifyFlexEnd","width":10200,"height":10200},"children":{"child0":{"style":{"height":1000}},"child1":{"style":{"height":1000}},"child2":{"style":{"height":1000}}}},"justify_content_column_center":{"style":{"justifyContent":"JustifyCenter","width":10200,"height":10200},"children":{"child0":{"style":{"height":1000}},"child1":{"style":{"height":1000}},"child2":{"style":{"height":1000}}}},"justify_content_column_space_between":{"style":{"justifyContent":"JustifySpaceBetween","width":10200,"height":10200},"children":{"child0":{"style":{"height":1000}},"child1":{"style":{"height":1000}},"child2":{"style":{"height":1000}}}},"justify_content_column_space_around":{"style":{"justifyContent":"JustifySpaceAround","width":10200,"height":10200},"children":{"child0":{"style":{"height":1000}},"child1":{"style":{"height":1000}},"child2":{"style":{"height":1000}}}},"border_flex_child":{"style":{"width":10000,"height":10000,"borderTop":1000,"borderBottom":1000,"borderLeft":1000,"borderRight":1000},"children":{"child0":{"style":{"flexGrow":"1","width":1000}}}},"min_height":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","minHeight":6000}},"child1":{"style":{"flexGrow":"1"}}}},"min_width":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","minWidth":6000}},"child1":{"style":{"flexGrow":"1"}}}},"padding_flex_child":{"style":{"width":10000,"height":10000,"paddingTop":1000,"paddingBottom":1000,"paddingLeft":1000,"paddingRight":1000},"children":{"child0":{"style":{"flexGrow":"1","width":1000}}}},"margin_and_flex_row":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","marginStart":1000,"marginEnd":1000}}}},"margin_and_flex_column":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","marginTop":1000,"marginBottom":1000}}}},"margin_and_stretch_row":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","marginTop":1000,"marginBottom":1000}}}},"margin_and_stretch_column":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","marginStart":1000,"marginEnd":1000}}}},"margin_with_sibling_row":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","marginEnd":1000}},"child1":{"style":{"flexGrow":"1"}}}},"margin_with_sibling_column":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","marginBottom":1000}},"child1":{"style":{"flexGrow":"1"}}}},"flex_basis_flex_grow_column":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","flexBasis":5000}},"child1":{"style":{"flexGrow":"1"}}}},"flex_basis_flex_grow_row":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","flexBasis":5000}},"child1":{"style":{"flexGrow":"1"}}}},"flex_basis_flex_shrink_column":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexBasis":10000,"flexShrink":"1"}},"child1":{"style":{"flexBasis":5000}}}},"flex_basis_flex_shrink_row":{"style":{"flexDirection":"Row","width":10000,"height":10000},"children":{"child0":{"style":{"flexBasis":10000,"flexShrink":"1"}},"child1":{"style":{"flexBasis":5000}}}},"flex_basis_flex_grow_undefined_main":{"style":{"width":10000},"children":{"child0":{"style":{"flexGrow":"1","flexBasis":10000}},"child1":{"style":{"flexBasis":5000}}}},"flex_basis_flex_grow_undefined_main_w_margin_top":{"style":{"width":10000,"marginTop":1000},"children":{"child0":{"style":{"flexGrow":"1","flexBasis":10000}},"child1":{"style":{"flexBasis":5000}}}},"flex_basis_flex_grow_undefined_main_w_margin_bottom":{"style":{"width":10000,"marginBottom":1000},"children":{"child0":{"style":{"flexGrow":"1","flexBasis":10000}},"child1":{"style":{"flexBasis":5000}}}},"flex_basis_flex_grow_undefined_main_w_margin_left":{"style":{"width":10000,"marginLeft":1000},"children":{"child0":{"style":{"flexGrow":"1","flexBasis":10000}},"child1":{"style":{"flexBasis":5000}}}},"jwalke_border_width_only_start":{"style":{"alignItems":"AlignCenter","justifyContent":"JustifyCenter","width":10000,"height":10000,"borderStart":1000,"borderTop":1000,"borderBottom":2000},"children":{"child0":{"style":{"height":1000,"width":1000}}}},"jwalke_border_width_only_end":{"style":{"alignItems":"AlignCenter","justifyContent":"JustifyCenter","width":10000,"height":10000,"borderEnd":1000,"borderTop":1000,"borderBottom":2000},"children":{"child0":{"style":{"height":1000,"width":1000}}}},"start_overrides_margin":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","marginLeft":2000,"marginRight":2000,"marginStart":1000}}}},"end_overrides_margin":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","marginLeft":2000,"marginRight":2000,"marginEnd":1000}}}},"start_overrides_padding":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","paddingLeft":2000,"paddingRight":2000,"paddingStart":1000}}}},"end_overrides_padding":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","paddingLeft":2000,"paddingRight":2000,"paddingEnd":1000}}}},"start_overrides_border":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"flexGrow":"1","borderLeft":2000,"borderRight":2000,"borderStart":1000}}}},"end_overrides_border":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"borderLeft":2000,"borderRight":2000,"borderEnd":1000,"flexGrow":"1"}}}},"start_overrides":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"positionType":"Absolute","left":2000,"right":2000,"start":1000,"flexGrow":"1"}}}},"end_overrides":{"style":{"width":10000,"height":10000},"children":{"child0":{"style":{"positionType":"Absolute","left":2000,"right":2000,"endd":1000,"flexGrow":"1"}}}},"flex_shrink_to_zero":{"style":{"height":7500},"children":{"child0":{"style":{"width":5000,"height":5000,"flexShrink":"0"}},"child1":{"style":{"width":5000,"height":5000,"flexShrink":"1"}},"child2":{"style":{"width":5000,"height":5000,"flexShrink":"0"}}}},"flex_basis_overrides_main_size":{"style":{"height":10000,"width":10000},"children":{"child0":{"style":{"height":2000,"flexGrow":"1","flexBasis":5000}},"child1":{"style":{"height":1000,"flexGrow":"1"}},"child2":{"style":{"height":1000,"flexGrow":"1"}}}},"flex_grow_shrink_at_most":{"style":{"height":10000,"width":10000},"children":{"child0":{"style":{},"children":{"child0":{"style":{"flexGrow":"1","flexShrink":"1"}}}}}},"bugRepro":{"style":{"alignItems":"AlignAuto","paddingStart":4800,"paddingEnd":4800,"width":140800,"flexDirection":"Row"},"children":{"child0":{"style":{},"children":{"child0":{"style":{}}}},"child1":{"style":{},"children":{"child0":{"style":{},"children":{"child0":{"style":{}}}}}}}},"bugRepro2":{"style":{"paddingStart":1000,"paddingEnd":1000,"width":20000,"flexDirection":"Row"},"children":{"child0":{"style":{"justifyContent":"JustifyFlexStart","width":2000}},"child1":{"style":{"minHeight":0,"flexDirection":"Row","flexGrow":"1"},"children":{"child0":{"style":{"flexGrow":"1"}}}}}}}
  *
  */
let floatMult = ( *. );

let floatDiv = (/.);

let floatSub = (-.);

module Node = {
  type context = unit;
  let nullContext = ();
};

module Encoding = FloatEncoding;

module LayoutTestUtils = LayoutTestUtils.Create Node Encoding;

module Layout = Layout.Create Node Encoding;

module LayoutSupport = Layout.LayoutSupport;

open LayoutTestUtils;

open Encoding;

let flex_grow_within_max_width = "flex_grow_within_max_width";

let flex_grow_within_constrained_max_width = "flex_grow_within_constrained_max_width";

let justify_content_overflow_min_max = "justify_content_overflow_min_max";

let justify_content_min_max = "justify_content_min_max";

let align_items_min_max = "align_items_min_max";

let align_items_stretch = "align_items_stretch";

let align_items_center = "align_items_center";

let align_items_flex_start = "align_items_flex_start";

let align_items_flex_end = "align_items_flex_end";

let align_self_center = "align_self_center";

let align_self_flex_end = "align_self_flex_end";

let align_self_flex_start = "align_self_flex_start";

let align_self_flex_end_override_flex_start = "align_self_flex_end_override_flex_start";

let border_no_size = "border_no_size";

let border_no_size_broken_out = "border_no_size_broken_out";

let border_no_size_override_left = "border_no_size_override_left";

let border_no_size_override_right = "border_no_size_override_right";

let border_no_size_override_bottom = "border_no_size_override_bottom";

let border_container_match_child = "border_container_match_child";

let border_stretch_child = "border_stretch_child";

let border_center_child = "border_center_child";

let max_width = "max_width";

let max_height = "max_height";

let padding_no_size = "padding_no_size";

let padding_container_match_child = "padding_container_match_child";

let padding_stretch_child = "padding_stretch_child";

let padding_center_child = "padding_center_child";

let absolute_layout_width_height_start_top = "absolute_layout_width_height_start_top";

let absolute_layout_width_height_end_bottom = "absolute_layout_width_height_end_bottom";

let absolute_layout_start_top_end_bottom = "absolute_layout_start_top_end_bottom";

let absolute_layout_width_height_start_top_end_bottom = "absolute_layout_width_height_start_top_end_bottom";

let do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent = "do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent";

let flex_direction_column_no_height = "flex_direction_column_no_height";

let flex_direction_row_no_width = "flex_direction_row_no_width";

let flex_direction_column = "flex_direction_column";

let flex_direction_row = "flex_direction_row";

let flex_direction_column_reverse = "flex_direction_column_reverse";

let flex_direction_row_reverse = "flex_direction_row_reverse";

let wrap_column = "wrap_column";

let wrap_row = "wrap_row";

let wrap_row_align_items_flex_end = "wrap_row_align_items_flex_end";

let wrap_row_align_items_center = "wrap_row_align_items_center";

let margin_start = "margin_start";

let margin_end = "margin_end";

let margin_left = "margin_left";

let margin_top = "margin_top";

let margin_right = "margin_right";

let margin_bottom = "margin_bottom";

let align_content_flex_start = "align_content_flex_start";

let align_content_flex_end = "align_content_flex_end";

let align_content_center = "align_content_center";

let align_content_stretch = "align_content_stretch";

let justify_content_row_flex_start = "justify_content_row_flex_start";

let justify_content_row_flex_end = "justify_content_row_flex_end";

let justify_content_row_center = "justify_content_row_center";

let justify_content_row_space_between = "justify_content_row_space_between";

let justify_content_row_space_around = "justify_content_row_space_around";

let justify_content_column_flex_start = "justify_content_column_flex_start";

let justify_content_column_flex_end = "justify_content_column_flex_end";

let justify_content_column_center = "justify_content_column_center";

let justify_content_column_space_between = "justify_content_column_space_between";

let justify_content_column_space_around = "justify_content_column_space_around";

let border_flex_child = "border_flex_child";

let min_height = "min_height";

let min_width = "min_width";

let padding_flex_child = "padding_flex_child";

let margin_and_flex_row = "margin_and_flex_row";

let margin_and_flex_column = "margin_and_flex_column";

let margin_and_stretch_row = "margin_and_stretch_row";

let margin_and_stretch_column = "margin_and_stretch_column";

let margin_with_sibling_row = "margin_with_sibling_row";

let margin_with_sibling_column = "margin_with_sibling_column";

let flex_basis_flex_grow_column = "flex_basis_flex_grow_column";

let flex_basis_flex_grow_row = "flex_basis_flex_grow_row";

let flex_basis_flex_shrink_column = "flex_basis_flex_shrink_column";

let flex_basis_flex_shrink_row = "flex_basis_flex_shrink_row";

let flex_basis_flex_grow_undefined_main = "flex_basis_flex_grow_undefined_main";

let flex_basis_flex_grow_undefined_main_w_margin_top = "flex_basis_flex_grow_undefined_main_w_margin_top";

let flex_basis_flex_grow_undefined_main_w_margin_bottom = "flex_basis_flex_grow_undefined_main_w_margin_bottom";

let flex_basis_flex_grow_undefined_main_w_margin_left = "flex_basis_flex_grow_undefined_main_w_margin_left";

let jwalke_border_width_only_start = "jwalke_border_width_only_start";

let jwalke_border_width_only_end = "jwalke_border_width_only_end";

let start_overrides_margin = "start_overrides_margin";

let end_overrides_margin = "end_overrides_margin";

let start_overrides_padding = "start_overrides_padding";

let end_overrides_padding = "end_overrides_padding";

let start_overrides_border = "start_overrides_border";

let end_overrides_border = "end_overrides_border";

let start_overrides = "start_overrides";

let end_overrides = "end_overrides";

let flex_shrink_to_zero = "flex_shrink_to_zero";

let flex_basis_overrides_main_size = "flex_basis_overrides_main_size";

let flex_grow_shrink_at_most = "flex_grow_shrink_at_most";

let bugRepro = "bugRepro";

let bugRepro2 = "bugRepro2";


/**
 * Since Core_bench is such a huge dependency and it doesn't compile with byte,
 * we include a fake shim of it that we enable by default. To use the far
 * superior Core_bench.
 *
 * - Comment out `include FakeCore;` below.
 * - Uncomment `open Core_bench.Std;`
 * - Delete the two targets in package.json (byteTarget, jsTarget)
 * - Run `npm run build`, then `npm run bench`
 *
 */
module FakeCore = {
  module Bench = {
    module Test = {
      let create name::s itm => (s, itm);
    };
    let make_command listofCreatedBenchmarks => listofCreatedBenchmarks;
  };
  module Core = {
    let runCommand (name, func) => {
      let numIterations = 10000;
      let timesInMs = Array.make_float numIterations;
      Gc.full_major ();
      let startSeconds = Sys.time ();
      for i in 0 to (numIterations - 1) {
        let itemStartSeconds = Sys.time ();
        func ();
        let itemEndSeconds = Sys.time ();
        timesInMs.(i) = floatSub itemEndSeconds itemStartSeconds
      };
      let endSeconds = Sys.time ();
      print_string (
        "Average ms for " ^
        name ^
        " " ^
        string_of_float (
          floatMult 1000.0 (floatDiv (floatSub endSeconds startSeconds) (float_of_int numIterations))
        )
      );
      print_newline ();
      Array.sort compare timesInMs;
      print_string (
        "Median ms for " ^
        name ^
        " " ^
        string_of_float (floatMult 1000.0 timesInMs.(numIterations / 2)) ^ " (Not Valid For JS benchmarks)"
      );
      print_newline ()
    };
    module Std = {
      module Command = {
        let run listOftests => List.iter (fun command => runCommand command) listOftests;
      };
    };
  };
};

include FakeCore;

/* open Core_bench.Std; */
if (LayoutTestUtils.runMode === Bench) {
  if LayoutTestUtils.shouldBenchmarkAllAsOne {
    Core.Std.Command.run (
      Bench.make_command [
        Bench.Test.create
          name::"all-benchmarks"
          (
            fun () => {
              /* flex_grow_within_max_width */
              let root_style = {...LayoutSupport.defaultStyle, width: 200.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexDirection: Row, maxWidth: 100.0};
              let root_child0_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, height: 20.0};
              let root_child0_child0 =
                LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
              let root_child0 =
                LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_grow_within_constrained_max_width */
              let root_style = {...LayoutSupport.defaultStyle, width: 200.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexDirection: Row, maxWidth: 300.0};
              let root_child0_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, height: 20.0};
              let root_child0_child0 =
                LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
              let root_child0 =
                LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_overflow_min_max */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyCenter,
                minHeight: 100.0,
                maxHeight: 110.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_min_max */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyCenter,
                width: 100.0,
                minHeight: 100.0,
                maxHeight: 200.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 60.0, height: 60.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_items_min_max */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                alignItems: AlignCenter,
                height: 100.0,
                minWidth: 100.0,
                maxWidth: 200.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 60.0, height: 60.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_items_stretch */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_items_center */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                alignItems: AlignCenter,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_items_flex_start */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                alignItems: AlignFlexStart,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_items_flex_end */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                alignItems: AlignFlexEnd,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_self_center */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                alignSelf: AlignCenter,
                width: 10.0,
                height: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_self_flex_end */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                alignSelf: AlignFlexEnd,
                width: 10.0,
                height: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_self_flex_start */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                alignSelf: AlignFlexStart,
                width: 10.0,
                height: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_self_flex_end_override_flex_start */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                alignItems: AlignFlexStart,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                alignSelf: AlignFlexEnd,
                width: 10.0,
                height: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_no_size */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                borderTop: 10.0,
                borderBottom: 10.0,
                borderLeft: 10.0,
                borderRight: 10.0
              };
              let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_no_size_broken_out */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                borderLeft: 10.0,
                borderRight: 10.0,
                borderTop: 10.0,
                borderBottom: 10.0
              };
              let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_no_size_override_left */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                borderTop: 20.0,
                borderBottom: 20.0,
                borderLeft: 20.0,
                borderRight: 20.0
              };
              let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_no_size_override_right */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                borderTop: 20.0,
                borderBottom: 20.0,
                borderLeft: 20.0,
                borderRight: 20.0
              };
              let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_no_size_override_bottom */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                borderTop: 20.0,
                borderBottom: 20.0,
                borderLeft: 20.0,
                borderRight: 20.0
              };
              let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_container_match_child */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                borderTop: 10.0,
                borderBottom: 10.0,
                borderLeft: 10.0,
                borderRight: 10.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_stretch_child */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                width: 100.0,
                height: 100.0,
                borderTop: 10.0,
                borderBottom: 10.0,
                borderLeft: 10.0,
                borderRight: 10.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_center_child */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyCenter,
                alignItems: AlignCenter,
                width: 100.0,
                height: 100.0,
                borderStart: 10.0,
                borderTop: 10.0,
                borderEnd: 20.0,
                borderBottom: 20.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* max_width */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, maxWidth: 50.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* max_height */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, maxHeight: 50.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* padding_no_size */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                paddingTop: 10.0,
                paddingBottom: 10.0,
                paddingLeft: 10.0,
                paddingRight: 10.0
              };
              let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* padding_container_match_child */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                paddingTop: 10.0,
                paddingBottom: 10.0,
                paddingLeft: 10.0,
                paddingRight: 10.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* padding_stretch_child */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                width: 100.0,
                height: 100.0,
                paddingTop: 10.0,
                paddingBottom: 10.0,
                paddingLeft: 10.0,
                paddingRight: 10.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* padding_center_child */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyCenter,
                alignItems: AlignCenter,
                paddingTop: 10.0,
                paddingBottom: 20.0,
                width: 100.0,
                height: 100.0,
                paddingStart: 10.0,
                paddingEnd: 20.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* absolute_layout_width_height_start_top */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                positionType: Absolute,
                top: 10.0,
                start: 10.0,
                width: 10.0,
                height: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* absolute_layout_width_height_end_bottom */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                positionType: Absolute,
                bottom: 10.0,
                endd: 10.0,
                width: 10.0,
                height: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* absolute_layout_start_top_end_bottom */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                positionType: Absolute,
                start: 10.0,
                top: 10.0,
                endd: 10.0,
                bottom: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* absolute_layout_width_height_start_top_end_bottom */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                width: 10.0,
                height: 10.0,
                positionType: Absolute,
                start: 10.0,
                top: 10.0,
                endd: 10.0,
                bottom: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                overflow: Hidden,
                width: 50.0,
                height: 50.0
              };
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                positionType: Absolute,
                start: 0.0,
                top: 0.0
              };
              let root_child0_child0_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_child0 =
                LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
              let root_child0 =
                LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_direction_column_no_height */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_direction_row_no_width */
              let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_direction_column */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_direction_row */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_direction_column_reverse */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: ColumnReverse,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_direction_row_reverse */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: RowReverse,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* wrap_column */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexWrap: CssWrap,
                width: 60.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2, root_child3|]
                  andStyle::root_style
                  ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* wrap_row */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexWrap: CssWrap,
                flexDirection: Row,
                width: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2, root_child3|]
                  andStyle::root_style
                  ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* wrap_row_align_items_flex_end */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                alignItems: AlignFlexEnd,
                flexWrap: CssWrap,
                width: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 20.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2, root_child3|]
                  andStyle::root_style
                  ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* wrap_row_align_items_center */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                alignItems: AlignCenter,
                flexWrap: CssWrap,
                width: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 20.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
              let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2, root_child3|]
                  andStyle::root_style
                  ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_start */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginStart: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_end */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                justifyContent: JustifyFlexEnd,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginEnd: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_left */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginLeft: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_top */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, marginTop: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_right */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                justifyContent: JustifyFlexEnd,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginRight: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_bottom */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyFlexEnd,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, marginBottom: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_content_flex_start */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Column,
                alignContent: AlignFlexStart,
                width: 100.0,
                height: 100.0,
                flexWrap: CssWrap
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
              let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
                  andStyle::root_style
                  ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_content_flex_end */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Column,
                alignContent: AlignFlexEnd,
                flexWrap: CssWrap,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
              let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
                  andStyle::root_style
                  ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_content_center */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Column,
                alignContent: AlignCenter,
                flexWrap: CssWrap,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
              let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
              let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
                  andStyle::root_style
                  ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* align_content_stretch */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Column,
                alignContent: AlignStretch,
                flexWrap: CssWrap,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0};
              let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
              let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0};
              let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
                  andStyle::root_style
                  ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_row_flex_start */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                justifyContent: JustifyFlexStart,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_row_flex_end */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                justifyContent: JustifyFlexEnd,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_row_center */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                justifyContent: JustifyCenter,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_row_space_between */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                justifyContent: JustifySpaceBetween,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_row_space_around */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                justifyContent: JustifySpaceAround,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_column_flex_start */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyFlexStart,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_column_flex_end */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyFlexEnd,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_column_center */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyCenter,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_column_space_between */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifySpaceBetween,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* justify_content_column_space_around */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifySpaceAround,
                width: 102.0,
                height: 102.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* border_flex_child */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                width: 100.0,
                height: 100.0,
                borderTop: 10.0,
                borderBottom: 10.0,
                borderLeft: 10.0,
                borderRight: 10.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* min_height */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, minHeight: 60.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* min_width */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, minWidth: 60.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* padding_flex_child */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                width: 100.0,
                height: 100.0,
                paddingTop: 10.0,
                paddingBottom: 10.0,
                paddingLeft: 10.0,
                paddingRight: 10.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_and_flex_row */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                marginStart: 10.0,
                marginEnd: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_and_flex_column */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                marginTop: 10.0,
                marginBottom: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_and_stretch_row */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                marginTop: 10.0,
                marginBottom: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_and_stretch_column */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                marginStart: 10.0,
                marginEnd: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_with_sibling_row */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, marginEnd: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* margin_with_sibling_column */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, marginBottom: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_flex_grow_column */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 50.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_flex_grow_row */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 50.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_flex_shrink_column */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexBasis: 100.0, flexShrink: 0.01};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_flex_shrink_row */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                flexDirection: Row,
                width: 100.0,
                height: 100.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, flexBasis: 100.0, flexShrink: 0.01};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_flex_grow_undefined_main */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_flex_grow_undefined_main_w_margin_top */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginTop: 10.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_flex_grow_undefined_main_w_margin_bottom */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginBottom: 10.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_flex_grow_undefined_main_w_margin_left */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginLeft: 10.0};
              let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* jwalke_border_width_only_start */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                alignItems: AlignCenter,
                justifyContent: JustifyCenter,
                width: 100.0,
                height: 100.0,
                borderStart: 10.0,
                borderTop: 10.0,
                borderBottom: 20.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* jwalke_border_width_only_end */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                alignItems: AlignCenter,
                justifyContent: JustifyCenter,
                width: 100.0,
                height: 100.0,
                borderEnd: 10.0,
                borderTop: 10.0,
                borderBottom: 20.0
              };
              let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, width: 10.0};
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* start_overrides_margin */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                marginLeft: 20.0,
                marginRight: 20.0,
                marginStart: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* end_overrides_margin */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                marginLeft: 20.0,
                marginRight: 20.0,
                marginEnd: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* start_overrides_padding */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                paddingLeft: 20.0,
                paddingRight: 20.0,
                paddingStart: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* end_overrides_padding */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                paddingLeft: 20.0,
                paddingRight: 20.0,
                paddingEnd: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* start_overrides_border */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                borderLeft: 20.0,
                borderRight: 20.0,
                borderStart: 10.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* end_overrides_border */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                borderLeft: 20.0,
                borderRight: 20.0,
                borderEnd: 10.0,
                flexGrow: 0.01
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* start_overrides */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                positionType: Absolute,
                left: 20.0,
                right: 20.0,
                start: 10.0,
                flexGrow: 0.01
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* end_overrides */
              let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                positionType: Absolute,
                left: 20.0,
                right: 20.0,
                endd: 10.0,
                flexGrow: 0.01
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_shrink_to_zero */
              let root_style = {...LayoutSupport.defaultStyle, height: 75.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                width: 50.0,
                height: 50.0,
                flexShrink: 0.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {
                ...LayoutSupport.defaultStyle,
                width: 50.0,
                height: 50.0,
                flexShrink: 0.01
              };
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {
                ...LayoutSupport.defaultStyle,
                width: 50.0,
                height: 50.0,
                flexShrink: 0.0
              };
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_basis_overrides_main_size */
              let root_style = {...LayoutSupport.defaultStyle, height: 100.0, width: 100.0};
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                height: 20.0,
                flexGrow: 0.01,
                flexBasis: 50.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0, flexGrow: 0.01};
              let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
              let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0, flexGrow: 0.01};
              let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
              let root =
                LayoutSupport.createNode
                  withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* flex_grow_shrink_at_most */
              let root_style = {...LayoutSupport.defaultStyle, height: 100.0, width: 100.0};
              let root_child0_style = LayoutSupport.defaultStyle;
              let root_child0_child0_style = {
                ...LayoutSupport.defaultStyle,
                flexGrow: 0.01,
                flexShrink: 0.01
              };
              let root_child0_child0 =
                LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
              let root_child0 =
                LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
              let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* bugRepro */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                alignItems: AlignAuto,
                paddingStart: 48.0,
                paddingEnd: 48.0,
                width: 1408.0,
                flexDirection: Row
              };
              let root_child0_style = LayoutSupport.defaultStyle;
              let root_child0_child0_style = LayoutSupport.defaultStyle;
              let root_child0_child0 =
                LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
              let root_child0 =
                LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
              let root_child1_style = LayoutSupport.defaultStyle;
              let root_child1_child0_style = LayoutSupport.defaultStyle;
              let root_child1_child0_child0_style = LayoutSupport.defaultStyle;
              let root_child1_child0_child0 =
                LayoutSupport.createNode withChildren::[||] andStyle::root_child1_child0_child0_style ();
              let root_child1_child0 =
                LayoutSupport.createNode
                  withChildren::[|root_child1_child0_child0|] andStyle::root_child1_child0_style ();
              let root_child1 =
                LayoutSupport.createNode withChildren::[|root_child1_child0|] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl;
              /* bugRepro2 */
              let root_style = {
                ...LayoutSupport.defaultStyle,
                paddingStart: 10.0,
                paddingEnd: 10.0,
                width: 200.0,
                flexDirection: Row
              };
              let root_child0_style = {
                ...LayoutSupport.defaultStyle,
                justifyContent: JustifyFlexStart,
                width: 20.0
              };
              let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
              let root_child1_style = {
                ...LayoutSupport.defaultStyle,
                minHeight: 0.0,
                flexDirection: Row,
                flexGrow: 0.01
              };
              let root_child1_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
              let root_child1_child0 =
                LayoutSupport.createNode withChildren::[||] andStyle::root_child1_child0_style ();
              let root_child1 =
                LayoutSupport.createNode withChildren::[|root_child1_child0|] andStyle::root_child1_style ();
              let root =
                LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
              Layout.layoutNode root cssUndefined cssUndefined Ltr;
              Layout.layoutNode root cssUndefined cssUndefined Rtl
            }
          )
      ]
    )
  } else {
    let bench_flex_grow_within_max_width () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 200.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexDirection: Row, maxWidth: 100.0};
      let root_child0_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, height: 20.0};
      let root_child0_child0 =
        LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
      let root_child0 =
        LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_grow_within_constrained_max_width () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 200.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexDirection: Row, maxWidth: 300.0};
      let root_child0_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, height: 20.0};
      let root_child0_child0 =
        LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
      let root_child0 =
        LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_overflow_min_max () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifyCenter,
        minHeight: 100.0,
        maxHeight: 110.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_min_max () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifyCenter,
        width: 100.0,
        minHeight: 100.0,
        maxHeight: 200.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 60.0, height: 60.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_items_min_max () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        alignItems: AlignCenter,
        height: 100.0,
        minWidth: 100.0,
        maxWidth: 200.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 60.0, height: 60.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_items_stretch () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_items_center () => {
      let root_style = {...LayoutSupport.defaultStyle, alignItems: AlignCenter, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_items_flex_start () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        alignItems: AlignFlexStart,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_items_flex_end () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        alignItems: AlignFlexEnd,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_self_center () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        alignSelf: AlignCenter,
        width: 10.0,
        height: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_self_flex_end () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        alignSelf: AlignFlexEnd,
        width: 10.0,
        height: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_self_flex_start () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        alignSelf: AlignFlexStart,
        width: 10.0,
        height: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_self_flex_end_override_flex_start () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        alignItems: AlignFlexStart,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        alignSelf: AlignFlexEnd,
        width: 10.0,
        height: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_no_size () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        borderTop: 10.0,
        borderBottom: 10.0,
        borderLeft: 10.0,
        borderRight: 10.0
      };
      let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_no_size_broken_out () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        borderLeft: 10.0,
        borderRight: 10.0,
        borderTop: 10.0,
        borderBottom: 10.0
      };
      let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_no_size_override_left () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        borderTop: 20.0,
        borderBottom: 20.0,
        borderLeft: 20.0,
        borderRight: 20.0
      };
      let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_no_size_override_right () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        borderTop: 20.0,
        borderBottom: 20.0,
        borderLeft: 20.0,
        borderRight: 20.0
      };
      let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_no_size_override_bottom () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        borderTop: 20.0,
        borderBottom: 20.0,
        borderLeft: 20.0,
        borderRight: 20.0
      };
      let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_container_match_child () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        borderTop: 10.0,
        borderBottom: 10.0,
        borderLeft: 10.0,
        borderRight: 10.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_stretch_child () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        width: 100.0,
        height: 100.0,
        borderTop: 10.0,
        borderBottom: 10.0,
        borderLeft: 10.0,
        borderRight: 10.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_center_child () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifyCenter,
        alignItems: AlignCenter,
        width: 100.0,
        height: 100.0,
        borderStart: 10.0,
        borderTop: 10.0,
        borderEnd: 20.0,
        borderBottom: 20.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_max_width () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, maxWidth: 50.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_max_height () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, maxHeight: 50.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_padding_no_size () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        paddingTop: 10.0,
        paddingBottom: 10.0,
        paddingLeft: 10.0,
        paddingRight: 10.0
      };
      let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_padding_container_match_child () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        paddingTop: 10.0,
        paddingBottom: 10.0,
        paddingLeft: 10.0,
        paddingRight: 10.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_padding_stretch_child () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        width: 100.0,
        height: 100.0,
        paddingTop: 10.0,
        paddingBottom: 10.0,
        paddingLeft: 10.0,
        paddingRight: 10.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_padding_center_child () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifyCenter,
        alignItems: AlignCenter,
        paddingTop: 10.0,
        paddingBottom: 20.0,
        width: 100.0,
        height: 100.0,
        paddingStart: 10.0,
        paddingEnd: 20.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_absolute_layout_width_height_start_top () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        positionType: Absolute,
        top: 10.0,
        start: 10.0,
        width: 10.0,
        height: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_absolute_layout_width_height_end_bottom () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        positionType: Absolute,
        bottom: 10.0,
        endd: 10.0,
        width: 10.0,
        height: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_absolute_layout_start_top_end_bottom () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        positionType: Absolute,
        start: 10.0,
        top: 10.0,
        endd: 10.0,
        bottom: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_absolute_layout_width_height_start_top_end_bottom () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        width: 10.0,
        height: 10.0,
        positionType: Absolute,
        start: 10.0,
        top: 10.0,
        endd: 10.0,
        bottom: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        overflow: Hidden,
        width: 50.0,
        height: 50.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, positionType: Absolute, start: 0.0, top: 0.0};
      let root_child0_child0_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_child0 =
        LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
      let root_child0 =
        LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_direction_column_no_height () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_direction_row_no_width () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_direction_column () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_direction_row () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_direction_column_reverse () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: ColumnReverse,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_direction_row_reverse () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: RowReverse,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_wrap_column () => {
      let root_style = {...LayoutSupport.defaultStyle, flexWrap: CssWrap, width: 60.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2, root_child3|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_wrap_row () => {
      let root_style = {...LayoutSupport.defaultStyle, flexWrap: CssWrap, flexDirection: Row, width: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2, root_child3|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_wrap_row_align_items_flex_end () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        alignItems: AlignFlexEnd,
        flexWrap: CssWrap,
        width: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 20.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2, root_child3|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_wrap_row_align_items_center () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        alignItems: AlignCenter,
        flexWrap: CssWrap,
        width: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 20.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
      let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2, root_child3|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_start () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginStart: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_end () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        justifyContent: JustifyFlexEnd,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginEnd: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_left () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginLeft: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_top () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, marginTop: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_right () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        justifyContent: JustifyFlexEnd,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginRight: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_bottom () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifyFlexEnd,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, marginBottom: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_content_flex_start () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Column,
        alignContent: AlignFlexStart,
        width: 100.0,
        height: 100.0,
        flexWrap: CssWrap
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
      let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
          andStyle::root_style
          ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_content_flex_end () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Column,
        alignContent: AlignFlexEnd,
        flexWrap: CssWrap,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
      let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
          andStyle::root_style
          ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_content_center () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Column,
        alignContent: AlignCenter,
        flexWrap: CssWrap,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
      let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
      let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
          andStyle::root_style
          ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_align_content_stretch () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Column,
        alignContent: AlignStretch,
        flexWrap: CssWrap,
        width: 100.0,
        height: 100.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0};
      let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
      let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0};
      let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
          andStyle::root_style
          ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_row_flex_start () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        justifyContent: JustifyFlexStart,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_row_flex_end () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        justifyContent: JustifyFlexEnd,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_row_center () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        justifyContent: JustifyCenter,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_row_space_between () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        justifyContent: JustifySpaceBetween,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_row_space_around () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        flexDirection: Row,
        justifyContent: JustifySpaceAround,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_column_flex_start () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifyFlexStart,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_column_flex_end () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifyFlexEnd,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_column_center () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifyCenter,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_column_space_between () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifySpaceBetween,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_justify_content_column_space_around () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        justifyContent: JustifySpaceAround,
        width: 102.0,
        height: 102.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_border_flex_child () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        width: 100.0,
        height: 100.0,
        borderTop: 10.0,
        borderBottom: 10.0,
        borderLeft: 10.0,
        borderRight: 10.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_min_height () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, minHeight: 60.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_min_width () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, minWidth: 60.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_padding_flex_child () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        width: 100.0,
        height: 100.0,
        paddingTop: 10.0,
        paddingBottom: 10.0,
        paddingLeft: 10.0,
        paddingRight: 10.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_and_flex_row () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        marginStart: 10.0,
        marginEnd: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_and_flex_column () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        marginTop: 10.0,
        marginBottom: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_and_stretch_row () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        marginTop: 10.0,
        marginBottom: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_and_stretch_column () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        marginStart: 10.0,
        marginEnd: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_with_sibling_row () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, marginEnd: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_margin_with_sibling_column () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, marginBottom: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_flex_grow_column () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 50.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_flex_grow_row () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 50.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_flex_shrink_column () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexBasis: 100.0, flexShrink: 0.01};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_flex_shrink_row () => {
      let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexBasis: 100.0, flexShrink: 0.01};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_flex_grow_undefined_main () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_flex_grow_undefined_main_w_margin_top () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginTop: 10.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_flex_grow_undefined_main_w_margin_bottom () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginBottom: 10.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_flex_grow_undefined_main_w_margin_left () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginLeft: 10.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_jwalke_border_width_only_start () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        alignItems: AlignCenter,
        justifyContent: JustifyCenter,
        width: 100.0,
        height: 100.0,
        borderStart: 10.0,
        borderTop: 10.0,
        borderBottom: 20.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_jwalke_border_width_only_end () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        alignItems: AlignCenter,
        justifyContent: JustifyCenter,
        width: 100.0,
        height: 100.0,
        borderEnd: 10.0,
        borderTop: 10.0,
        borderBottom: 20.0
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, width: 10.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_start_overrides_margin () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        marginLeft: 20.0,
        marginRight: 20.0,
        marginStart: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_end_overrides_margin () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        marginLeft: 20.0,
        marginRight: 20.0,
        marginEnd: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_start_overrides_padding () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        paddingLeft: 20.0,
        paddingRight: 20.0,
        paddingStart: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_end_overrides_padding () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        paddingLeft: 20.0,
        paddingRight: 20.0,
        paddingEnd: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_start_overrides_border () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        flexGrow: 0.01,
        borderLeft: 20.0,
        borderRight: 20.0,
        borderStart: 10.0
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_end_overrides_border () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        borderLeft: 20.0,
        borderRight: 20.0,
        borderEnd: 10.0,
        flexGrow: 0.01
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_start_overrides () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        positionType: Absolute,
        left: 20.0,
        right: 20.0,
        start: 10.0,
        flexGrow: 0.01
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_end_overrides () => {
      let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
      let root_child0_style = {
        ...LayoutSupport.defaultStyle,
        positionType: Absolute,
        left: 20.0,
        right: 20.0,
        endd: 10.0,
        flexGrow: 0.01
      };
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_shrink_to_zero () => {
      let root_style = {...LayoutSupport.defaultStyle, height: 75.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0, flexShrink: 0.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0, flexShrink: 0.01};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0, flexShrink: 0.0};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_basis_overrides_main_size () => {
      let root_style = {...LayoutSupport.defaultStyle, height: 100.0, width: 100.0};
      let root_child0_style = {...LayoutSupport.defaultStyle, height: 20.0, flexGrow: 0.01, flexBasis: 50.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0, flexGrow: 0.01};
      let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
      let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0, flexGrow: 0.01};
      let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
      let root =
        LayoutSupport.createNode
          withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_flex_grow_shrink_at_most () => {
      let root_style = {...LayoutSupport.defaultStyle, height: 100.0, width: 100.0};
      let root_child0_style = LayoutSupport.defaultStyle;
      let root_child0_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexShrink: 0.01};
      let root_child0_child0 =
        LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
      let root_child0 =
        LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_bugRepro () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        alignItems: AlignAuto,
        paddingStart: 48.0,
        paddingEnd: 48.0,
        width: 1408.0,
        flexDirection: Row
      };
      let root_child0_style = LayoutSupport.defaultStyle;
      let root_child0_child0_style = LayoutSupport.defaultStyle;
      let root_child0_child0 =
        LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
      let root_child0 =
        LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
      let root_child1_style = LayoutSupport.defaultStyle;
      let root_child1_child0_style = LayoutSupport.defaultStyle;
      let root_child1_child0_child0_style = LayoutSupport.defaultStyle;
      let root_child1_child0_child0 =
        LayoutSupport.createNode withChildren::[||] andStyle::root_child1_child0_child0_style ();
      let root_child1_child0 =
        LayoutSupport.createNode
          withChildren::[|root_child1_child0_child0|] andStyle::root_child1_child0_style ();
      let root_child1 =
        LayoutSupport.createNode withChildren::[|root_child1_child0|] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let bench_bugRepro2 () => {
      let root_style = {
        ...LayoutSupport.defaultStyle,
        paddingStart: 10.0,
        paddingEnd: 10.0,
        width: 200.0,
        flexDirection: Row
      };
      let root_child0_style = {...LayoutSupport.defaultStyle, justifyContent: JustifyFlexStart, width: 20.0};
      let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
      let root_child1_style = {
        ...LayoutSupport.defaultStyle,
        minHeight: 0.0,
        flexDirection: Row,
        flexGrow: 0.01
      };
      let root_child1_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
      let root_child1_child0 =
        LayoutSupport.createNode withChildren::[||] andStyle::root_child1_child0_style ();
      let root_child1 =
        LayoutSupport.createNode withChildren::[|root_child1_child0|] andStyle::root_child1_style ();
      let root = LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
      Layout.layoutNode root cssUndefined cssUndefined Ltr;
      Layout.layoutNode root cssUndefined cssUndefined Rtl
    };
    let benchmarks = [];
    let benchmarks =
      LayoutTestUtils.shouldRun flex_grow_within_max_width ?
        [
          Bench.Test.create name::flex_grow_within_max_width bench_flex_grow_within_max_width,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_grow_within_constrained_max_width ?
        [
          Bench.Test.create
            name::flex_grow_within_constrained_max_width bench_flex_grow_within_constrained_max_width,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_overflow_min_max ?
        [
          Bench.Test.create name::justify_content_overflow_min_max bench_justify_content_overflow_min_max,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_min_max ?
        [Bench.Test.create name::justify_content_min_max bench_justify_content_min_max, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_items_min_max ?
        [Bench.Test.create name::align_items_min_max bench_align_items_min_max, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_items_stretch ?
        [Bench.Test.create name::align_items_stretch bench_align_items_stretch, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_items_center ?
        [Bench.Test.create name::align_items_center bench_align_items_center, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_items_flex_start ?
        [Bench.Test.create name::align_items_flex_start bench_align_items_flex_start, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_items_flex_end ?
        [Bench.Test.create name::align_items_flex_end bench_align_items_flex_end, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_self_center ?
        [Bench.Test.create name::align_self_center bench_align_self_center, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_self_flex_end ?
        [Bench.Test.create name::align_self_flex_end bench_align_self_flex_end, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_self_flex_start ?
        [Bench.Test.create name::align_self_flex_start bench_align_self_flex_start, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_self_flex_end_override_flex_start ?
        [
          Bench.Test.create
            name::align_self_flex_end_override_flex_start bench_align_self_flex_end_override_flex_start,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_no_size ?
        [Bench.Test.create name::border_no_size bench_border_no_size, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_no_size_broken_out ?
        [Bench.Test.create name::border_no_size_broken_out bench_border_no_size_broken_out, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_no_size_override_left ?
        [
          Bench.Test.create name::border_no_size_override_left bench_border_no_size_override_left,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_no_size_override_right ?
        [
          Bench.Test.create name::border_no_size_override_right bench_border_no_size_override_right,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_no_size_override_bottom ?
        [
          Bench.Test.create name::border_no_size_override_bottom bench_border_no_size_override_bottom,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_container_match_child ?
        [
          Bench.Test.create name::border_container_match_child bench_border_container_match_child,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_stretch_child ?
        [Bench.Test.create name::border_stretch_child bench_border_stretch_child, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_center_child ?
        [Bench.Test.create name::border_center_child bench_border_center_child, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun max_width ?
        [Bench.Test.create name::max_width bench_max_width, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun max_height ?
        [Bench.Test.create name::max_height bench_max_height, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun padding_no_size ?
        [Bench.Test.create name::padding_no_size bench_padding_no_size, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun padding_container_match_child ?
        [
          Bench.Test.create name::padding_container_match_child bench_padding_container_match_child,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun padding_stretch_child ?
        [Bench.Test.create name::padding_stretch_child bench_padding_stretch_child, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun padding_center_child ?
        [Bench.Test.create name::padding_center_child bench_padding_center_child, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun absolute_layout_width_height_start_top ?
        [
          Bench.Test.create
            name::absolute_layout_width_height_start_top bench_absolute_layout_width_height_start_top,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun absolute_layout_width_height_end_bottom ?
        [
          Bench.Test.create
            name::absolute_layout_width_height_end_bottom bench_absolute_layout_width_height_end_bottom,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun absolute_layout_start_top_end_bottom ?
        [
          Bench.Test.create
            name::absolute_layout_start_top_end_bottom bench_absolute_layout_start_top_end_bottom,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun absolute_layout_width_height_start_top_end_bottom ?
        [
          Bench.Test.create
            name::absolute_layout_width_height_start_top_end_bottom
            bench_absolute_layout_width_height_start_top_end_bottom,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent ?
        [
          Bench.Test.create
            name::do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent
            bench_do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_direction_column_no_height ?
        [
          Bench.Test.create name::flex_direction_column_no_height bench_flex_direction_column_no_height,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_direction_row_no_width ?
        [
          Bench.Test.create name::flex_direction_row_no_width bench_flex_direction_row_no_width,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_direction_column ?
        [Bench.Test.create name::flex_direction_column bench_flex_direction_column, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_direction_row ?
        [Bench.Test.create name::flex_direction_row bench_flex_direction_row, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_direction_column_reverse ?
        [
          Bench.Test.create name::flex_direction_column_reverse bench_flex_direction_column_reverse,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_direction_row_reverse ?
        [
          Bench.Test.create name::flex_direction_row_reverse bench_flex_direction_row_reverse,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun wrap_column ?
        [Bench.Test.create name::wrap_column bench_wrap_column, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun wrap_row ?
        [Bench.Test.create name::wrap_row bench_wrap_row, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun wrap_row_align_items_flex_end ?
        [
          Bench.Test.create name::wrap_row_align_items_flex_end bench_wrap_row_align_items_flex_end,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun wrap_row_align_items_center ?
        [
          Bench.Test.create name::wrap_row_align_items_center bench_wrap_row_align_items_center,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_start ?
        [Bench.Test.create name::margin_start bench_margin_start, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_end ?
        [Bench.Test.create name::margin_end bench_margin_end, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_left ?
        [Bench.Test.create name::margin_left bench_margin_left, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_top ?
        [Bench.Test.create name::margin_top bench_margin_top, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_right ?
        [Bench.Test.create name::margin_right bench_margin_right, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_bottom ?
        [Bench.Test.create name::margin_bottom bench_margin_bottom, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_content_flex_start ?
        [Bench.Test.create name::align_content_flex_start bench_align_content_flex_start, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_content_flex_end ?
        [Bench.Test.create name::align_content_flex_end bench_align_content_flex_end, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_content_center ?
        [Bench.Test.create name::align_content_center bench_align_content_center, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun align_content_stretch ?
        [Bench.Test.create name::align_content_stretch bench_align_content_stretch, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_row_flex_start ?
        [
          Bench.Test.create name::justify_content_row_flex_start bench_justify_content_row_flex_start,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_row_flex_end ?
        [
          Bench.Test.create name::justify_content_row_flex_end bench_justify_content_row_flex_end,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_row_center ?
        [
          Bench.Test.create name::justify_content_row_center bench_justify_content_row_center,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_row_space_between ?
        [
          Bench.Test.create name::justify_content_row_space_between bench_justify_content_row_space_between,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_row_space_around ?
        [
          Bench.Test.create name::justify_content_row_space_around bench_justify_content_row_space_around,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_column_flex_start ?
        [
          Bench.Test.create name::justify_content_column_flex_start bench_justify_content_column_flex_start,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_column_flex_end ?
        [
          Bench.Test.create name::justify_content_column_flex_end bench_justify_content_column_flex_end,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_column_center ?
        [
          Bench.Test.create name::justify_content_column_center bench_justify_content_column_center,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_column_space_between ?
        [
          Bench.Test.create
            name::justify_content_column_space_between bench_justify_content_column_space_between,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun justify_content_column_space_around ?
        [
          Bench.Test.create
            name::justify_content_column_space_around bench_justify_content_column_space_around,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun border_flex_child ?
        [Bench.Test.create name::border_flex_child bench_border_flex_child, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun min_height ?
        [Bench.Test.create name::min_height bench_min_height, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun min_width ?
        [Bench.Test.create name::min_width bench_min_width, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun padding_flex_child ?
        [Bench.Test.create name::padding_flex_child bench_padding_flex_child, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_and_flex_row ?
        [Bench.Test.create name::margin_and_flex_row bench_margin_and_flex_row, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_and_flex_column ?
        [Bench.Test.create name::margin_and_flex_column bench_margin_and_flex_column, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_and_stretch_row ?
        [Bench.Test.create name::margin_and_stretch_row bench_margin_and_stretch_row, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_and_stretch_column ?
        [Bench.Test.create name::margin_and_stretch_column bench_margin_and_stretch_column, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_with_sibling_row ?
        [Bench.Test.create name::margin_with_sibling_row bench_margin_with_sibling_row, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun margin_with_sibling_column ?
        [
          Bench.Test.create name::margin_with_sibling_column bench_margin_with_sibling_column,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_flex_grow_column ?
        [
          Bench.Test.create name::flex_basis_flex_grow_column bench_flex_basis_flex_grow_column,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_flex_grow_row ?
        [Bench.Test.create name::flex_basis_flex_grow_row bench_flex_basis_flex_grow_row, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_flex_shrink_column ?
        [
          Bench.Test.create name::flex_basis_flex_shrink_column bench_flex_basis_flex_shrink_column,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_flex_shrink_row ?
        [
          Bench.Test.create name::flex_basis_flex_shrink_row bench_flex_basis_flex_shrink_row,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_flex_grow_undefined_main ?
        [
          Bench.Test.create
            name::flex_basis_flex_grow_undefined_main bench_flex_basis_flex_grow_undefined_main,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_flex_grow_undefined_main_w_margin_top ?
        [
          Bench.Test.create
            name::flex_basis_flex_grow_undefined_main_w_margin_top
            bench_flex_basis_flex_grow_undefined_main_w_margin_top,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_flex_grow_undefined_main_w_margin_bottom ?
        [
          Bench.Test.create
            name::flex_basis_flex_grow_undefined_main_w_margin_bottom
            bench_flex_basis_flex_grow_undefined_main_w_margin_bottom,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_flex_grow_undefined_main_w_margin_left ?
        [
          Bench.Test.create
            name::flex_basis_flex_grow_undefined_main_w_margin_left
            bench_flex_basis_flex_grow_undefined_main_w_margin_left,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun jwalke_border_width_only_start ?
        [
          Bench.Test.create name::jwalke_border_width_only_start bench_jwalke_border_width_only_start,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun jwalke_border_width_only_end ?
        [
          Bench.Test.create name::jwalke_border_width_only_end bench_jwalke_border_width_only_end,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun start_overrides_margin ?
        [Bench.Test.create name::start_overrides_margin bench_start_overrides_margin, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun end_overrides_margin ?
        [Bench.Test.create name::end_overrides_margin bench_end_overrides_margin, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun start_overrides_padding ?
        [Bench.Test.create name::start_overrides_padding bench_start_overrides_padding, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun end_overrides_padding ?
        [Bench.Test.create name::end_overrides_padding bench_end_overrides_padding, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun start_overrides_border ?
        [Bench.Test.create name::start_overrides_border bench_start_overrides_border, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun end_overrides_border ?
        [Bench.Test.create name::end_overrides_border bench_end_overrides_border, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun start_overrides ?
        [Bench.Test.create name::start_overrides bench_start_overrides, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun end_overrides ?
        [Bench.Test.create name::end_overrides bench_end_overrides, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_shrink_to_zero ?
        [Bench.Test.create name::flex_shrink_to_zero bench_flex_shrink_to_zero, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_basis_overrides_main_size ?
        [
          Bench.Test.create name::flex_basis_overrides_main_size bench_flex_basis_overrides_main_size,
          ...benchmarks
        ] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun flex_grow_shrink_at_most ?
        [Bench.Test.create name::flex_grow_shrink_at_most bench_flex_grow_shrink_at_most, ...benchmarks] :
        benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun bugRepro ?
        [Bench.Test.create name::bugRepro bench_bugRepro, ...benchmarks] : benchmarks;
    let benchmarks =
      LayoutTestUtils.shouldRun bugRepro2 ?
        [Bench.Test.create name::bugRepro2 bench_bugRepro2, ...benchmarks] : benchmarks;
    Core.Std.Command.run (Bench.make_command benchmarks)
  }
} else {
  it
    flex_grow_within_max_width
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 200.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexDirection: Row, maxWidth: 100.0};
        let root_child0_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, height: 20.0};
        let root_child0_child0 =
          LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
        let root_child0 =
          LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 200.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 20.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 100.0 || root_child0_child0.layout.height != 20.0
        ) {
          assertLayouts
            0
            ({...root.layout, top: 0.0, left: 0.0, width: 200.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 20.0}, root_child0.layout)];
          assertLayouts
            1
            ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 20.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 20.0},
                root_child0_child0.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 200.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 100.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 20.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 100.0 || root_child0_child0.layout.height != 20.0
        ) {
          assertLayouts
            2
            ({...root.layout, top: 0.0, left: 0.0, width: 200.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 100.0, width: 100.0, height: 20.0}, root_child0.layout)
            ];
          assertLayouts
            3
            ({...root_child0.layout, top: 0.0, left: 100.0, width: 100.0, height: 20.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 20.0},
                root_child0_child0.layout
              )
            ]
        }
      }
    );
  it
    flex_grow_within_constrained_max_width
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 200.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexDirection: Row, maxWidth: 300.0};
        let root_child0_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, height: 20.0};
        let root_child0_child0 =
          LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
        let root_child0 =
          LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 200.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 200.0 ||
          root_child0.layout.height != 20.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 200.0 || root_child0_child0.layout.height != 20.0
        ) {
          assertLayouts
            4
            ({...root.layout, top: 0.0, left: 0.0, width: 200.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 200.0, height: 20.0}, root_child0.layout)];
          assertLayouts
            5
            ({...root_child0.layout, top: 0.0, left: 0.0, width: 200.0, height: 20.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 200.0, height: 20.0},
                root_child0_child0.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 200.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 200.0 ||
          root_child0.layout.height != 20.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 200.0 || root_child0_child0.layout.height != 20.0
        ) {
          assertLayouts
            6
            ({...root.layout, top: 0.0, left: 0.0, width: 200.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 200.0, height: 20.0}, root_child0.layout)];
          assertLayouts
            7
            ({...root_child0.layout, top: 0.0, left: 0.0, width: 200.0, height: 20.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 200.0, height: 20.0},
                root_child0_child0.layout
              )
            ]
        }
      }
    );
  it
    justify_content_overflow_min_max
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyCenter,
          minHeight: 100.0,
          maxHeight: 110.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 50.0 ||
          root.layout.height != 110.0 ||
          root_child0.layout.top != (-20.0) ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 50.0 ||
          root_child1.layout.top != 30.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 50.0 ||
          root_child2.layout.top != 80.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 50.0 || root_child2.layout.height != 50.0
        ) {
          assertLayouts
            8
            ({...root.layout, top: 0.0, left: 0.0, width: 50.0, height: 110.0}, root.layout)
            [
              (
                {...root_child0.layout, top: (-20.0), left: 0.0, width: 50.0, height: 50.0},
                root_child0.layout
              ),
              ({...root_child1.layout, top: 30.0, left: 0.0, width: 50.0, height: 50.0}, root_child1.layout),
              ({...root_child2.layout, top: 80.0, left: 0.0, width: 50.0, height: 50.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 50.0 ||
          root.layout.height != 110.0 ||
          root_child0.layout.top != (-20.0) ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 50.0 ||
          root_child1.layout.top != 30.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 50.0 ||
          root_child2.layout.top != 80.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 50.0 || root_child2.layout.height != 50.0
        ) {
          assertLayouts
            9
            ({...root.layout, top: 0.0, left: 0.0, width: 50.0, height: 110.0}, root.layout)
            [
              (
                {...root_child0.layout, top: (-20.0), left: 0.0, width: 50.0, height: 50.0},
                root_child0.layout
              ),
              ({...root_child1.layout, top: 30.0, left: 0.0, width: 50.0, height: 50.0}, root_child1.layout),
              ({...root_child2.layout, top: 80.0, left: 0.0, width: 50.0, height: 50.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_min_max
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyCenter,
          width: 100.0,
          minHeight: 100.0,
          maxHeight: 200.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 60.0, height: 60.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 20.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 60.0 || root_child0.layout.height != 60.0
        ) {
          assertLayouts
            10
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 20.0, left: 0.0, width: 60.0, height: 60.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 20.0 ||
          root_child0.layout.left != 40.0 ||
          root_child0.layout.width != 60.0 || root_child0.layout.height != 60.0
        ) {
          assertLayouts
            11
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 20.0, left: 40.0, width: 60.0, height: 60.0}, root_child0.layout)]
        }
      }
    );
  it
    align_items_min_max
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          alignItems: AlignCenter,
          height: 100.0,
          minWidth: 100.0,
          maxWidth: 200.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 60.0, height: 60.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 60.0 || root_child0.layout.height != 60.0
        ) {
          assertLayouts
            12
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 20.0, width: 60.0, height: 60.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 60.0 || root_child0.layout.height != 60.0
        ) {
          assertLayouts
            13
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 20.0, width: 60.0, height: 60.0}, root_child0.layout)]
        }
      }
    );
  it
    align_items_stretch
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            14
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            15
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    align_items_center
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          alignItems: AlignCenter,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 45.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            16
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 45.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 45.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            17
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 45.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    align_items_flex_start
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          alignItems: AlignFlexStart,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            18
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            19
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    align_items_flex_end
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          alignItems: AlignFlexEnd,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            20
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            21
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    align_self_center
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          alignSelf: AlignCenter,
          width: 10.0,
          height: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 45.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            22
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 45.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 45.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            23
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 45.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    align_self_flex_end
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          alignSelf: AlignFlexEnd,
          width: 10.0,
          height: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            24
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            25
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    align_self_flex_start
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          alignSelf: AlignFlexStart,
          width: 10.0,
          height: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            26
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            27
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    align_self_flex_end_override_flex_start
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          alignItems: AlignFlexStart,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          alignSelf: AlignFlexEnd,
          width: 10.0,
          height: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            28
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            29
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    border_no_size
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          borderTop: 10.0,
          borderBottom: 10.0,
          borderLeft: 10.0,
          borderRight: 10.0
        };
        let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 20.0 || root.layout.height != 20.0
        ) {
          assertLayouts 30 ({...root.layout, top: 0.0, left: 0.0, width: 20.0, height: 20.0}, root.layout) []
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 20.0 || root.layout.height != 20.0
        ) {
          assertLayouts 31 ({...root.layout, top: 0.0, left: 0.0, width: 20.0, height: 20.0}, root.layout) []
        }
      }
    );
  it
    border_no_size_broken_out
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          borderLeft: 10.0,
          borderRight: 10.0,
          borderTop: 10.0,
          borderBottom: 10.0
        };
        let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 20.0 || root.layout.height != 20.0
        ) {
          assertLayouts 32 ({...root.layout, top: 0.0, left: 0.0, width: 20.0, height: 20.0}, root.layout) []
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 20.0 || root.layout.height != 20.0
        ) {
          assertLayouts 33 ({...root.layout, top: 0.0, left: 0.0, width: 20.0, height: 20.0}, root.layout) []
        }
      }
    );
  it
    border_no_size_override_left
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          borderTop: 20.0,
          borderBottom: 20.0,
          borderLeft: 20.0,
          borderRight: 20.0
        };
        let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 40.0 || root.layout.height != 40.0
        ) {
          assertLayouts 34 ({...root.layout, top: 0.0, left: 0.0, width: 40.0, height: 40.0}, root.layout) []
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 40.0 || root.layout.height != 40.0
        ) {
          assertLayouts 35 ({...root.layout, top: 0.0, left: 0.0, width: 40.0, height: 40.0}, root.layout) []
        }
      }
    );
  it
    border_no_size_override_right
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          borderTop: 20.0,
          borderBottom: 20.0,
          borderLeft: 20.0,
          borderRight: 20.0
        };
        let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 40.0 || root.layout.height != 40.0
        ) {
          assertLayouts 36 ({...root.layout, top: 0.0, left: 0.0, width: 40.0, height: 40.0}, root.layout) []
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 40.0 || root.layout.height != 40.0
        ) {
          assertLayouts 37 ({...root.layout, top: 0.0, left: 0.0, width: 40.0, height: 40.0}, root.layout) []
        }
      }
    );
  it
    border_no_size_override_bottom
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          borderTop: 20.0,
          borderBottom: 20.0,
          borderLeft: 20.0,
          borderRight: 20.0
        };
        let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 40.0 || root.layout.height != 40.0
        ) {
          assertLayouts 38 ({...root.layout, top: 0.0, left: 0.0, width: 40.0, height: 40.0}, root.layout) []
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 40.0 || root.layout.height != 40.0
        ) {
          assertLayouts 39 ({...root.layout, top: 0.0, left: 0.0, width: 40.0, height: 40.0}, root.layout) []
        }
      }
    );
  it
    border_container_match_child
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          borderTop: 10.0,
          borderBottom: 10.0,
          borderLeft: 10.0,
          borderRight: 10.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 30.0 ||
          root.layout.height != 30.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            40
            ({...root.layout, top: 0.0, left: 0.0, width: 30.0, height: 30.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 30.0 ||
          root.layout.height != 30.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            41
            ({...root.layout, top: 0.0, left: 0.0, width: 30.0, height: 30.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    border_stretch_child
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          width: 100.0,
          height: 100.0,
          borderTop: 10.0,
          borderBottom: 10.0,
          borderLeft: 10.0,
          borderRight: 10.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            42
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 80.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            43
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 80.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    border_center_child
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyCenter,
          alignItems: AlignCenter,
          width: 100.0,
          height: 100.0,
          borderStart: 10.0,
          borderTop: 10.0,
          borderEnd: 20.0,
          borderBottom: 20.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 40.0 ||
          root_child0.layout.left != 40.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            44
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 40.0, left: 40.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 40.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            45
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 40.0, left: 50.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    max_width
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, maxWidth: 50.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            46
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 50.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 50.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            47
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 50.0, width: 50.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    max_height
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, maxHeight: 50.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 50.0
        ) {
          assertLayouts
            48
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 50.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 50.0
        ) {
          assertLayouts
            49
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 50.0}, root_child0.layout)]
        }
      }
    );
  it
    padding_no_size
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          paddingTop: 10.0,
          paddingBottom: 10.0,
          paddingLeft: 10.0,
          paddingRight: 10.0
        };
        let root = LayoutSupport.createNode withChildren::[||] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 20.0 || root.layout.height != 20.0
        ) {
          assertLayouts 50 ({...root.layout, top: 0.0, left: 0.0, width: 20.0, height: 20.0}, root.layout) []
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 || root.layout.width != 20.0 || root.layout.height != 20.0
        ) {
          assertLayouts 51 ({...root.layout, top: 0.0, left: 0.0, width: 20.0, height: 20.0}, root.layout) []
        }
      }
    );
  it
    padding_container_match_child
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          paddingTop: 10.0,
          paddingBottom: 10.0,
          paddingLeft: 10.0,
          paddingRight: 10.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 30.0 ||
          root.layout.height != 30.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            52
            ({...root.layout, top: 0.0, left: 0.0, width: 30.0, height: 30.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 30.0 ||
          root.layout.height != 30.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            53
            ({...root.layout, top: 0.0, left: 0.0, width: 30.0, height: 30.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    padding_stretch_child
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          width: 100.0,
          height: 100.0,
          paddingTop: 10.0,
          paddingBottom: 10.0,
          paddingLeft: 10.0,
          paddingRight: 10.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            54
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 80.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            55
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 80.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    padding_center_child
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyCenter,
          alignItems: AlignCenter,
          paddingTop: 10.0,
          paddingBottom: 20.0,
          width: 100.0,
          height: 100.0,
          paddingStart: 10.0,
          paddingEnd: 20.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 40.0 ||
          root_child0.layout.left != 40.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            56
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 40.0, left: 40.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 40.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            57
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 40.0, left: 50.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    absolute_layout_width_height_start_top
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          positionType: Absolute,
          top: 10.0,
          start: 10.0,
          width: 10.0,
          height: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            58
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            59
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 80.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    absolute_layout_width_height_end_bottom
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          positionType: Absolute,
          bottom: 10.0,
          endd: 10.0,
          width: 10.0,
          height: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 80.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            60
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 80.0, left: 80.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 80.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            61
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 80.0, left: 10.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    absolute_layout_start_top_end_bottom
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          positionType: Absolute,
          start: 10.0,
          top: 10.0,
          endd: 10.0,
          bottom: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            62
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 80.0, height: 80.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            63
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 80.0, height: 80.0}, root_child0.layout)]
        }
      }
    );
  it
    absolute_layout_width_height_start_top_end_bottom
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          width: 10.0,
          height: 10.0,
          positionType: Absolute,
          start: 10.0,
          top: 10.0,
          endd: 10.0,
          bottom: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            64
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            65
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 80.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    do_not_clamp_height_of_absolute_node_to_height_of_its_overflow_hidden_parent
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          overflow: Hidden,
          width: 50.0,
          height: 50.0
        };
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          positionType: Absolute,
          start: 0.0,
          top: 0.0
        };
        let root_child0_child0_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_child0 =
          LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
        let root_child0 =
          LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 50.0 ||
          root.layout.height != 50.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 100.0 || root_child0_child0.layout.height != 100.0
        ) {
          assertLayouts
            66
            ({...root.layout, top: 0.0, left: 0.0, width: 50.0, height: 50.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)
            ];
          assertLayouts
            67
            ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0},
                root_child0_child0.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 50.0 ||
          root.layout.height != 50.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != (-50.0) ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 100.0 || root_child0_child0.layout.height != 100.0
        ) {
          assertLayouts
            68
            ({...root.layout, top: 0.0, left: 0.0, width: 50.0, height: 50.0}, root.layout)
            [
              (
                {...root_child0.layout, top: 0.0, left: (-50.0), width: 100.0, height: 100.0},
                root_child0.layout
              )
            ];
          assertLayouts
            69
            (
              {...root_child0.layout, top: 0.0, left: (-50.0), width: 100.0, height: 100.0},
              root_child0.layout
            )
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0},
                root_child0_child0.layout
              )
            ]
        }
      }
    );
  it
    flex_direction_column_no_height
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 30.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 100.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            70
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 30.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 0.0, width: 100.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 100.0, height: 10.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 30.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 100.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            71
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 30.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 0.0, width: 100.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 100.0, height: 10.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    flex_direction_row_no_width
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 30.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 10.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 100.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 20.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 100.0
        ) {
          assertLayouts
            72
            ({...root.layout, top: 0.0, left: 0.0, width: 30.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 10.0, width: 10.0, height: 100.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 20.0, width: 10.0, height: 100.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 30.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 10.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 100.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 100.0
        ) {
          assertLayouts
            73
            ({...root.layout, top: 0.0, left: 0.0, width: 30.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 20.0, width: 10.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 10.0, width: 10.0, height: 100.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 0.0, width: 10.0, height: 100.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    flex_direction_column
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 100.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            74
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 0.0, width: 100.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 100.0, height: 10.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 100.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            75
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 0.0, width: 100.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 100.0, height: 10.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    flex_direction_row
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 10.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 100.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 20.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 100.0
        ) {
          assertLayouts
            76
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 10.0, width: 10.0, height: 100.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 20.0, width: 10.0, height: 100.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 80.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 100.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 70.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 100.0
        ) {
          assertLayouts
            77
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 80.0, width: 10.0, height: 100.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 70.0, width: 10.0, height: 100.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    flex_direction_column_reverse
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: ColumnReverse,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 90.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 80.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 70.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 100.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            78
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 90.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 80.0, left: 0.0, width: 100.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 70.0, left: 0.0, width: 100.0, height: 10.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 90.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 80.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 70.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 100.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            79
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 90.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 80.0, left: 0.0, width: 100.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 70.0, left: 0.0, width: 100.0, height: 10.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    flex_direction_row_reverse
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: RowReverse,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 80.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 100.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 70.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 100.0
        ) {
          assertLayouts
            80
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 80.0, width: 10.0, height: 100.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 70.0, width: 10.0, height: 100.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 10.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 100.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 20.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 100.0
        ) {
          assertLayouts
            81
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 10.0, width: 10.0, height: 100.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 20.0, width: 10.0, height: 100.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    wrap_column
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexWrap: CssWrap, width: 60.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2, root_child3|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 60.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 30.0 ||
          root_child0.layout.height != 30.0 ||
          root_child1.layout.top != 30.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 30.0 ||
          root_child1.layout.height != 30.0 ||
          root_child2.layout.top != 60.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 30.0 ||
          root_child2.layout.height != 30.0 ||
          root_child3.layout.top != 0.0 ||
          root_child3.layout.left != 30.0 ||
          root_child3.layout.width != 30.0 || root_child3.layout.height != 30.0
        ) {
          assertLayouts
            82
            ({...root.layout, top: 0.0, left: 0.0, width: 60.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 30.0, height: 30.0}, root_child0.layout),
              ({...root_child1.layout, top: 30.0, left: 0.0, width: 30.0, height: 30.0}, root_child1.layout),
              ({...root_child2.layout, top: 60.0, left: 0.0, width: 30.0, height: 30.0}, root_child2.layout),
              ({...root_child3.layout, top: 0.0, left: 30.0, width: 30.0, height: 30.0}, root_child3.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 60.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 30.0 ||
          root_child0.layout.width != 30.0 ||
          root_child0.layout.height != 30.0 ||
          root_child1.layout.top != 30.0 ||
          root_child1.layout.left != 30.0 ||
          root_child1.layout.width != 30.0 ||
          root_child1.layout.height != 30.0 ||
          root_child2.layout.top != 60.0 ||
          root_child2.layout.left != 30.0 ||
          root_child2.layout.width != 30.0 ||
          root_child2.layout.height != 30.0 ||
          root_child3.layout.top != 0.0 ||
          root_child3.layout.left != 0.0 ||
          root_child3.layout.width != 30.0 || root_child3.layout.height != 30.0
        ) {
          assertLayouts
            83
            ({...root.layout, top: 0.0, left: 0.0, width: 60.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 30.0, width: 30.0, height: 30.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 30.0, left: 30.0, width: 30.0, height: 30.0},
                root_child1.layout
              ),
              (
                {...root_child2.layout, top: 60.0, left: 30.0, width: 30.0, height: 30.0},
                root_child2.layout
              ),
              ({...root_child3.layout, top: 0.0, left: 0.0, width: 30.0, height: 30.0}, root_child3.layout)
            ]
        }
      }
    );
  it
    wrap_row
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexWrap: CssWrap,
          flexDirection: Row,
          width: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2, root_child3|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 60.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 30.0 ||
          root_child0.layout.height != 30.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 30.0 ||
          root_child1.layout.width != 30.0 ||
          root_child1.layout.height != 30.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 60.0 ||
          root_child2.layout.width != 30.0 ||
          root_child2.layout.height != 30.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 0.0 ||
          root_child3.layout.width != 30.0 || root_child3.layout.height != 30.0
        ) {
          assertLayouts
            84
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 60.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 30.0, height: 30.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 30.0, width: 30.0, height: 30.0}, root_child1.layout),
              ({...root_child2.layout, top: 0.0, left: 60.0, width: 30.0, height: 30.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 0.0, width: 30.0, height: 30.0}, root_child3.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 60.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 70.0 ||
          root_child0.layout.width != 30.0 ||
          root_child0.layout.height != 30.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 40.0 ||
          root_child1.layout.width != 30.0 ||
          root_child1.layout.height != 30.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 10.0 ||
          root_child2.layout.width != 30.0 ||
          root_child2.layout.height != 30.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 70.0 ||
          root_child3.layout.width != 30.0 || root_child3.layout.height != 30.0
        ) {
          assertLayouts
            85
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 60.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 70.0, width: 30.0, height: 30.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 40.0, width: 30.0, height: 30.0}, root_child1.layout),
              ({...root_child2.layout, top: 0.0, left: 10.0, width: 30.0, height: 30.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 70.0, width: 30.0, height: 30.0}, root_child3.layout)
            ]
        }
      }
    );
  it
    wrap_row_align_items_flex_end
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          alignItems: AlignFlexEnd,
          flexWrap: CssWrap,
          width: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 20.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2, root_child3|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 60.0 ||
          root_child0.layout.top != 20.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 30.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 30.0 ||
          root_child1.layout.width != 30.0 ||
          root_child1.layout.height != 20.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 60.0 ||
          root_child2.layout.width != 30.0 ||
          root_child2.layout.height != 30.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 0.0 ||
          root_child3.layout.width != 30.0 || root_child3.layout.height != 30.0
        ) {
          assertLayouts
            86
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 60.0}, root.layout)
            [
              ({...root_child0.layout, top: 20.0, left: 0.0, width: 30.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 30.0, width: 30.0, height: 20.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 60.0, width: 30.0, height: 30.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 0.0, width: 30.0, height: 30.0}, root_child3.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 60.0 ||
          root_child0.layout.top != 20.0 ||
          root_child0.layout.left != 70.0 ||
          root_child0.layout.width != 30.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 40.0 ||
          root_child1.layout.width != 30.0 ||
          root_child1.layout.height != 20.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 10.0 ||
          root_child2.layout.width != 30.0 ||
          root_child2.layout.height != 30.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 70.0 ||
          root_child3.layout.width != 30.0 || root_child3.layout.height != 30.0
        ) {
          assertLayouts
            87
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 60.0}, root.layout)
            [
              ({...root_child0.layout, top: 20.0, left: 70.0, width: 30.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 40.0, width: 30.0, height: 20.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 10.0, width: 30.0, height: 30.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 70.0, width: 30.0, height: 30.0}, root_child3.layout)
            ]
        }
      }
    );
  it
    wrap_row_align_items_center
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          alignItems: AlignCenter,
          flexWrap: CssWrap,
          width: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 20.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root_child3_style = {...LayoutSupport.defaultStyle, width: 30.0, height: 30.0};
        let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2, root_child3|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 60.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 30.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 5.0 ||
          root_child1.layout.left != 30.0 ||
          root_child1.layout.width != 30.0 ||
          root_child1.layout.height != 20.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 60.0 ||
          root_child2.layout.width != 30.0 ||
          root_child2.layout.height != 30.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 0.0 ||
          root_child3.layout.width != 30.0 || root_child3.layout.height != 30.0
        ) {
          assertLayouts
            88
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 60.0}, root.layout)
            [
              ({...root_child0.layout, top: 10.0, left: 0.0, width: 30.0, height: 10.0}, root_child0.layout),
              ({...root_child1.layout, top: 5.0, left: 30.0, width: 30.0, height: 20.0}, root_child1.layout),
              ({...root_child2.layout, top: 0.0, left: 60.0, width: 30.0, height: 30.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 0.0, width: 30.0, height: 30.0}, root_child3.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 60.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 70.0 ||
          root_child0.layout.width != 30.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 5.0 ||
          root_child1.layout.left != 40.0 ||
          root_child1.layout.width != 30.0 ||
          root_child1.layout.height != 20.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 10.0 ||
          root_child2.layout.width != 30.0 ||
          root_child2.layout.height != 30.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 70.0 ||
          root_child3.layout.width != 30.0 || root_child3.layout.height != 30.0
        ) {
          assertLayouts
            89
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 60.0}, root.layout)
            [
              ({...root_child0.layout, top: 10.0, left: 70.0, width: 30.0, height: 10.0}, root_child0.layout),
              ({...root_child1.layout, top: 5.0, left: 40.0, width: 30.0, height: 20.0}, root_child1.layout),
              ({...root_child2.layout, top: 0.0, left: 10.0, width: 30.0, height: 30.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 70.0, width: 30.0, height: 30.0}, root_child3.layout)
            ]
        }
      }
    );
  it
    margin_start
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginStart: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            90
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 10.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            91
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 80.0, width: 10.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_end
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          justifyContent: JustifyFlexEnd,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginEnd: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            92
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 80.0, width: 10.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            93
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 10.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_left
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginLeft: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            94
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 10.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 90.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            95
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 90.0, width: 10.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_top
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, marginTop: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            96
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            97
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_right
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          justifyContent: JustifyFlexEnd,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0, marginRight: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            98
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 80.0, width: 10.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            99
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_bottom
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyFlexEnd,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, marginBottom: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 80.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            100
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 80.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 80.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            101
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 80.0, left: 0.0, width: 100.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    align_content_flex_start
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Column,
          alignContent: AlignFlexStart,
          width: 100.0,
          height: 100.0,
          flexWrap: CssWrap
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
        let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
            andStyle::root_style
            ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 50.0 ||
          root_child2.layout.height != 10.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 0.0 ||
          root_child3.layout.width != 50.0 ||
          root_child3.layout.height != 10.0 ||
          root_child4.layout.top != 40.0 ||
          root_child4.layout.left != 0.0 ||
          root_child4.layout.width != 50.0 || root_child4.layout.height != 10.0
        ) {
          assertLayouts
            102
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 50.0, height: 10.0}, root_child0.layout),
              ({...root_child1.layout, top: 10.0, left: 0.0, width: 50.0, height: 10.0}, root_child1.layout),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 50.0, height: 10.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 0.0, width: 50.0, height: 10.0}, root_child3.layout),
              ({...root_child4.layout, top: 40.0, left: 0.0, width: 50.0, height: 10.0}, root_child4.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 50.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 50.0 ||
          root_child2.layout.width != 50.0 ||
          root_child2.layout.height != 10.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 50.0 ||
          root_child3.layout.width != 50.0 ||
          root_child3.layout.height != 10.0 ||
          root_child4.layout.top != 40.0 ||
          root_child4.layout.left != 50.0 ||
          root_child4.layout.width != 50.0 || root_child4.layout.height != 10.0
        ) {
          assertLayouts
            103
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 50.0, width: 50.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 50.0, width: 50.0, height: 10.0},
                root_child1.layout
              ),
              (
                {...root_child2.layout, top: 20.0, left: 50.0, width: 50.0, height: 10.0},
                root_child2.layout
              ),
              (
                {...root_child3.layout, top: 30.0, left: 50.0, width: 50.0, height: 10.0},
                root_child3.layout
              ),
              ({...root_child4.layout, top: 40.0, left: 50.0, width: 50.0, height: 10.0}, root_child4.layout)
            ]
        }
      }
    );
  it
    align_content_flex_end
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Column,
          alignContent: AlignFlexEnd,
          flexWrap: CssWrap,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
        let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
            andStyle::root_style
            ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 50.0 ||
          root_child2.layout.height != 10.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 0.0 ||
          root_child3.layout.width != 50.0 ||
          root_child3.layout.height != 10.0 ||
          root_child4.layout.top != 40.0 ||
          root_child4.layout.left != 0.0 ||
          root_child4.layout.width != 50.0 || root_child4.layout.height != 10.0
        ) {
          assertLayouts
            104
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 50.0, height: 10.0}, root_child0.layout),
              ({...root_child1.layout, top: 10.0, left: 0.0, width: 50.0, height: 10.0}, root_child1.layout),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 50.0, height: 10.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 0.0, width: 50.0, height: 10.0}, root_child3.layout),
              ({...root_child4.layout, top: 40.0, left: 0.0, width: 50.0, height: 10.0}, root_child4.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 50.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 50.0 ||
          root_child2.layout.width != 50.0 ||
          root_child2.layout.height != 10.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 50.0 ||
          root_child3.layout.width != 50.0 ||
          root_child3.layout.height != 10.0 ||
          root_child4.layout.top != 40.0 ||
          root_child4.layout.left != 50.0 ||
          root_child4.layout.width != 50.0 || root_child4.layout.height != 10.0
        ) {
          assertLayouts
            105
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 50.0, width: 50.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 50.0, width: 50.0, height: 10.0},
                root_child1.layout
              ),
              (
                {...root_child2.layout, top: 20.0, left: 50.0, width: 50.0, height: 10.0},
                root_child2.layout
              ),
              (
                {...root_child3.layout, top: 30.0, left: 50.0, width: 50.0, height: 10.0},
                root_child3.layout
              ),
              ({...root_child4.layout, top: 40.0, left: 50.0, width: 50.0, height: 10.0}, root_child4.layout)
            ]
        }
      }
    );
  it
    align_content_center
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Column,
          alignContent: AlignCenter,
          flexWrap: CssWrap,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
        let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 10.0};
        let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
            andStyle::root_style
            ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 50.0 ||
          root_child2.layout.height != 10.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 0.0 ||
          root_child3.layout.width != 50.0 ||
          root_child3.layout.height != 10.0 ||
          root_child4.layout.top != 40.0 ||
          root_child4.layout.left != 0.0 ||
          root_child4.layout.width != 50.0 || root_child4.layout.height != 10.0
        ) {
          assertLayouts
            106
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 50.0, height: 10.0}, root_child0.layout),
              ({...root_child1.layout, top: 10.0, left: 0.0, width: 50.0, height: 10.0}, root_child1.layout),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 50.0, height: 10.0}, root_child2.layout),
              ({...root_child3.layout, top: 30.0, left: 0.0, width: 50.0, height: 10.0}, root_child3.layout),
              ({...root_child4.layout, top: 40.0, left: 0.0, width: 50.0, height: 10.0}, root_child4.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 50.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 50.0 ||
          root_child2.layout.width != 50.0 ||
          root_child2.layout.height != 10.0 ||
          root_child3.layout.top != 30.0 ||
          root_child3.layout.left != 50.0 ||
          root_child3.layout.width != 50.0 ||
          root_child3.layout.height != 10.0 ||
          root_child4.layout.top != 40.0 ||
          root_child4.layout.left != 50.0 ||
          root_child4.layout.width != 50.0 || root_child4.layout.height != 10.0
        ) {
          assertLayouts
            107
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 50.0, width: 50.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 50.0, width: 50.0, height: 10.0},
                root_child1.layout
              ),
              (
                {...root_child2.layout, top: 20.0, left: 50.0, width: 50.0, height: 10.0},
                root_child2.layout
              ),
              (
                {...root_child3.layout, top: 30.0, left: 50.0, width: 50.0, height: 10.0},
                root_child3.layout
              ),
              ({...root_child4.layout, top: 40.0, left: 50.0, width: 50.0, height: 10.0}, root_child4.layout)
            ]
        }
      }
    );
  it
    align_content_stretch
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Column,
          alignContent: AlignStretch,
          flexWrap: CssWrap,
          width: 100.0,
          height: 100.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root_child3_style = {...LayoutSupport.defaultStyle, width: 50.0};
        let root_child3 = LayoutSupport.createNode withChildren::[||] andStyle::root_child3_style ();
        let root_child4_style = {...LayoutSupport.defaultStyle, width: 50.0};
        let root_child4 = LayoutSupport.createNode withChildren::[||] andStyle::root_child4_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2, root_child3, root_child4|]
            andStyle::root_style
            ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 0.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 0.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 50.0 ||
          root_child2.layout.height != 0.0 ||
          root_child3.layout.top != 0.0 ||
          root_child3.layout.left != 0.0 ||
          root_child3.layout.width != 50.0 ||
          root_child3.layout.height != 0.0 ||
          root_child4.layout.top != 0.0 ||
          root_child4.layout.left != 0.0 ||
          root_child4.layout.width != 50.0 || root_child4.layout.height != 0.0
        ) {
          assertLayouts
            108
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 50.0, height: 0.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 0.0, width: 50.0, height: 0.0}, root_child1.layout),
              ({...root_child2.layout, top: 0.0, left: 0.0, width: 50.0, height: 0.0}, root_child2.layout),
              ({...root_child3.layout, top: 0.0, left: 0.0, width: 50.0, height: 0.0}, root_child3.layout),
              ({...root_child4.layout, top: 0.0, left: 0.0, width: 50.0, height: 0.0}, root_child4.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 0.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 50.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 0.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 50.0 ||
          root_child2.layout.width != 50.0 ||
          root_child2.layout.height != 0.0 ||
          root_child3.layout.top != 0.0 ||
          root_child3.layout.left != 50.0 ||
          root_child3.layout.width != 50.0 ||
          root_child3.layout.height != 0.0 ||
          root_child4.layout.top != 0.0 ||
          root_child4.layout.left != 50.0 ||
          root_child4.layout.width != 50.0 || root_child4.layout.height != 0.0
        ) {
          assertLayouts
            109
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 50.0, width: 50.0, height: 0.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 50.0, width: 50.0, height: 0.0}, root_child1.layout),
              ({...root_child2.layout, top: 0.0, left: 50.0, width: 50.0, height: 0.0}, root_child2.layout),
              ({...root_child3.layout, top: 0.0, left: 50.0, width: 50.0, height: 0.0}, root_child3.layout),
              ({...root_child4.layout, top: 0.0, left: 50.0, width: 50.0, height: 0.0}, root_child4.layout)
            ]
        }
      }
    );
  it
    justify_content_row_flex_start
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          justifyContent: JustifyFlexStart,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 10.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 20.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            110
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 10.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 20.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 92.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 82.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 72.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            111
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 92.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 82.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 72.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_row_flex_end
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          justifyContent: JustifyFlexEnd,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 72.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 82.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 92.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            112
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 72.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 82.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 92.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 10.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            113
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 20.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 10.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 0.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_row_center
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          justifyContent: JustifyCenter,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 36.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 46.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 56.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            114
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 36.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 46.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 56.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 56.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 46.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 36.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            115
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 56.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 46.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 36.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_row_space_between
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          justifyContent: JustifySpaceBetween,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 46.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 92.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            116
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 46.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 92.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 92.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 46.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            117
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 92.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 46.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 0.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_row_space_around
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          flexDirection: Row,
          justifyContent: JustifySpaceAround,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 12.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 46.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 80.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            118
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 12.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 46.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 80.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 ||
          root_child0.layout.height != 102.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 46.0 ||
          root_child1.layout.width != 10.0 ||
          root_child1.layout.height != 102.0 ||
          root_child2.layout.top != 0.0 ||
          root_child2.layout.left != 12.0 ||
          root_child2.layout.width != 10.0 || root_child2.layout.height != 102.0
        ) {
          assertLayouts
            119
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 80.0, width: 10.0, height: 102.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 0.0, left: 46.0, width: 10.0, height: 102.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 0.0, left: 12.0, width: 10.0, height: 102.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_column_flex_start
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyFlexStart,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            120
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 10.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 20.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            121
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 10.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 20.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_column_flex_end
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyFlexEnd,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 72.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 82.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 92.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            122
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 72.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 82.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 92.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 72.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 82.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 92.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            123
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 72.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 82.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 92.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_column_center
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyCenter,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 36.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 46.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 56.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            124
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 36.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 46.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 56.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 36.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 46.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 56.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            125
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 36.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 46.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 56.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_column_space_between
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifySpaceBetween,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 46.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 92.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            126
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 46.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 92.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 46.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 92.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            127
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 46.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 92.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    justify_content_column_space_around
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifySpaceAround,
          width: 102.0,
          height: 102.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 12.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 46.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 80.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            128
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 12.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 46.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 80.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 102.0 ||
          root.layout.height != 102.0 ||
          root_child0.layout.top != 12.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 102.0 ||
          root_child0.layout.height != 10.0 ||
          root_child1.layout.top != 46.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 102.0 ||
          root_child1.layout.height != 10.0 ||
          root_child2.layout.top != 80.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 102.0 || root_child2.layout.height != 10.0
        ) {
          assertLayouts
            129
            ({...root.layout, top: 0.0, left: 0.0, width: 102.0, height: 102.0}, root.layout)
            [
              ({...root_child0.layout, top: 12.0, left: 0.0, width: 102.0, height: 10.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 46.0, left: 0.0, width: 102.0, height: 10.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 80.0, left: 0.0, width: 102.0, height: 10.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    border_flex_child
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          width: 100.0,
          height: 100.0,
          borderTop: 10.0,
          borderBottom: 10.0,
          borderLeft: 10.0,
          borderRight: 10.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            130
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 10.0, height: 80.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            131
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 80.0, width: 10.0, height: 80.0}, root_child0.layout)]
        }
      }
    );
  it
    min_height
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, minHeight: 60.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 80.0 ||
          root_child1.layout.top != 80.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 20.0
        ) {
          assertLayouts
            132
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 80.0}, root_child0.layout),
              ({...root_child1.layout, top: 80.0, left: 0.0, width: 100.0, height: 20.0}, root_child1.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 80.0 ||
          root_child1.layout.top != 80.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 20.0
        ) {
          assertLayouts
            133
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 80.0}, root_child0.layout),
              ({...root_child1.layout, top: 80.0, left: 0.0, width: 100.0, height: 20.0}, root_child1.layout)
            ]
        }
      }
    );
  it
    min_width
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, minWidth: 60.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 80.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 80.0 ||
          root_child1.layout.width != 20.0 || root_child1.layout.height != 100.0
        ) {
          assertLayouts
            134
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 80.0, height: 100.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 80.0, width: 20.0, height: 100.0}, root_child1.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 80.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 20.0 || root_child1.layout.height != 100.0
        ) {
          assertLayouts
            135
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 20.0, width: 80.0, height: 100.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 0.0, width: 20.0, height: 100.0}, root_child1.layout)
            ]
        }
      }
    );
  it
    padding_flex_child
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          width: 100.0,
          height: 100.0,
          paddingTop: 10.0,
          paddingBottom: 10.0,
          paddingLeft: 10.0,
          paddingRight: 10.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            136
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 10.0, width: 10.0, height: 80.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 80.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            137
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 80.0, width: 10.0, height: 80.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_and_flex_row
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          marginStart: 10.0,
          marginEnd: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            138
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 80.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            139
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 80.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_and_flex_column
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          marginTop: 10.0,
          marginBottom: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            140
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 0.0, width: 100.0, height: 80.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            141
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 0.0, width: 100.0, height: 80.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_and_stretch_row
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          marginTop: 10.0,
          marginBottom: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            142
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 0.0, width: 100.0, height: 80.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 10.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 80.0
        ) {
          assertLayouts
            143
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 10.0, left: 0.0, width: 100.0, height: 80.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_and_stretch_column
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          marginStart: 10.0,
          marginEnd: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            144
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 80.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 80.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            145
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 80.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    margin_with_sibling_row
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, marginEnd: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 45.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 55.0 ||
          root_child1.layout.width != 45.0 || root_child1.layout.height != 100.0
        ) {
          assertLayouts
            146
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 45.0, height: 100.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 55.0, width: 45.0, height: 100.0}, root_child1.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 55.0 ||
          root_child0.layout.width != 45.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 45.0 || root_child1.layout.height != 100.0
        ) {
          assertLayouts
            147
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 55.0, width: 45.0, height: 100.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 0.0, width: 45.0, height: 100.0}, root_child1.layout)
            ]
        }
      }
    );
  it
    margin_with_sibling_column
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, marginBottom: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 45.0 ||
          root_child1.layout.top != 55.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 45.0
        ) {
          assertLayouts
            148
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 45.0}, root_child0.layout),
              ({...root_child1.layout, top: 55.0, left: 0.0, width: 100.0, height: 45.0}, root_child1.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 45.0 ||
          root_child1.layout.top != 55.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 45.0
        ) {
          assertLayouts
            149
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 45.0}, root_child0.layout),
              ({...root_child1.layout, top: 55.0, left: 0.0, width: 100.0, height: 45.0}, root_child1.layout)
            ]
        }
      }
    );
  it
    flex_basis_flex_grow_column
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 50.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 75.0 ||
          root_child1.layout.top != 75.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 25.0
        ) {
          assertLayouts
            150
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 75.0}, root_child0.layout),
              ({...root_child1.layout, top: 75.0, left: 0.0, width: 100.0, height: 25.0}, root_child1.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 75.0 ||
          root_child1.layout.top != 75.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 25.0
        ) {
          assertLayouts
            151
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 75.0}, root_child0.layout),
              ({...root_child1.layout, top: 75.0, left: 0.0, width: 100.0, height: 25.0}, root_child1.layout)
            ]
        }
      }
    );
  it
    flex_basis_flex_grow_row
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 50.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 75.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 75.0 ||
          root_child1.layout.width != 25.0 || root_child1.layout.height != 100.0
        ) {
          assertLayouts
            152
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 75.0, height: 100.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 75.0, width: 25.0, height: 100.0}, root_child1.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 25.0 ||
          root_child0.layout.width != 75.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 25.0 || root_child1.layout.height != 100.0
        ) {
          assertLayouts
            153
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 25.0, width: 75.0, height: 100.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 0.0, width: 25.0, height: 100.0}, root_child1.layout)
            ]
        }
      }
    );
  it
    flex_basis_flex_shrink_column
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexBasis: 100.0, flexShrink: 0.01};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 50.0 ||
          root_child1.layout.top != 50.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            154
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 50.0}, root_child0.layout),
              ({...root_child1.layout, top: 50.0, left: 0.0, width: 100.0, height: 50.0}, root_child1.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 50.0 ||
          root_child1.layout.top != 50.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            155
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 50.0}, root_child0.layout),
              ({...root_child1.layout, top: 50.0, left: 0.0, width: 100.0, height: 50.0}, root_child1.layout)
            ]
        }
      }
    );
  it
    flex_basis_flex_shrink_row
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, flexDirection: Row, width: 100.0, height: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexBasis: 100.0, flexShrink: 0.01};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 50.0 ||
          root_child1.layout.width != 50.0 || root_child1.layout.height != 100.0
        ) {
          assertLayouts
            156
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 50.0, height: 100.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 50.0, width: 50.0, height: 100.0}, root_child1.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 || root_child1.layout.height != 100.0
        ) {
          assertLayouts
            157
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 50.0, width: 50.0, height: 100.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 0.0, width: 50.0, height: 100.0}, root_child1.layout)
            ]
        }
      }
    );
  it
    flex_basis_flex_grow_undefined_main
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 150.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 100.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            158
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 150.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 100.0, left: 0.0, width: 100.0, height: 50.0},
                root_child1.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 150.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 100.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            159
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 150.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 100.0, left: 0.0, width: 100.0, height: 50.0},
                root_child1.layout
              )
            ]
        }
      }
    );
  it
    flex_basis_flex_grow_undefined_main_w_margin_top
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginTop: 10.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 10.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 150.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 100.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            160
            ({...root.layout, top: 10.0, left: 0.0, width: 100.0, height: 150.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 100.0, left: 0.0, width: 100.0, height: 50.0},
                root_child1.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 10.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 150.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 100.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            161
            ({...root.layout, top: 10.0, left: 0.0, width: 100.0, height: 150.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 100.0, left: 0.0, width: 100.0, height: 50.0},
                root_child1.layout
              )
            ]
        }
      }
    );
  it
    flex_basis_flex_grow_undefined_main_w_margin_bottom
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginBottom: 10.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 150.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 100.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            162
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 150.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 100.0, left: 0.0, width: 100.0, height: 50.0},
                root_child1.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 150.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 100.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            163
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 150.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 100.0, left: 0.0, width: 100.0, height: 50.0},
                root_child1.layout
              )
            ]
        }
      }
    );
  it
    flex_basis_flex_grow_undefined_main_w_margin_left
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, marginLeft: 10.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexBasis: 100.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, flexBasis: 50.0};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 10.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 150.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 100.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            164
            ({...root.layout, top: 0.0, left: 10.0, width: 100.0, height: 150.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 100.0, left: 0.0, width: 100.0, height: 50.0},
                root_child1.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 10.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 150.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 100.0 ||
          root_child1.layout.top != 100.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 || root_child1.layout.height != 50.0
        ) {
          assertLayouts
            165
            ({...root.layout, top: 0.0, left: 10.0, width: 100.0, height: 150.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 100.0, left: 0.0, width: 100.0, height: 50.0},
                root_child1.layout
              )
            ]
        }
      }
    );
  it
    jwalke_border_width_only_start
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          alignItems: AlignCenter,
          justifyContent: JustifyCenter,
          width: 100.0,
          height: 100.0,
          borderStart: 10.0,
          borderTop: 10.0,
          borderBottom: 20.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 40.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            166
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 40.0, left: 50.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 40.0 ||
          root_child0.layout.left != 40.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            167
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 40.0, left: 40.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    jwalke_border_width_only_end
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          alignItems: AlignCenter,
          justifyContent: JustifyCenter,
          width: 100.0,
          height: 100.0,
          borderEnd: 10.0,
          borderTop: 10.0,
          borderBottom: 20.0
        };
        let root_child0_style = {...LayoutSupport.defaultStyle, height: 10.0, width: 10.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 40.0 ||
          root_child0.layout.left != 40.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            168
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 40.0, left: 40.0, width: 10.0, height: 10.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 40.0 ||
          root_child0.layout.left != 50.0 ||
          root_child0.layout.width != 10.0 || root_child0.layout.height != 10.0
        ) {
          assertLayouts
            169
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 40.0, left: 50.0, width: 10.0, height: 10.0}, root_child0.layout)]
        }
      }
    );
  it
    start_overrides_margin
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          marginLeft: 20.0,
          marginRight: 20.0,
          marginStart: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 70.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            170
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 70.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 70.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            171
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 20.0, width: 70.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    end_overrides_margin
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          marginLeft: 20.0,
          marginRight: 20.0,
          marginEnd: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 70.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            172
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 20.0, width: 70.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 70.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            173
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 70.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    start_overrides_padding
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          paddingLeft: 20.0,
          paddingRight: 20.0,
          paddingStart: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            174
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            175
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    end_overrides_padding
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          paddingLeft: 20.0,
          paddingRight: 20.0,
          paddingEnd: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            176
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            177
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    start_overrides_border
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          flexGrow: 0.01,
          borderLeft: 20.0,
          borderRight: 20.0,
          borderStart: 10.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            178
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            179
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    end_overrides_border
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          borderLeft: 20.0,
          borderRight: 20.0,
          borderEnd: 10.0,
          flexGrow: 0.01
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            180
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 || root_child0.layout.height != 100.0
        ) {
          assertLayouts
            181
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root_child0.layout)]
        }
      }
    );
  it
    start_overrides
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          positionType: Absolute,
          left: 20.0,
          right: 20.0,
          start: 10.0,
          flexGrow: 0.01
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 70.0 || root_child0.layout.height != 0.0
        ) {
          assertLayouts
            182
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 70.0, height: 0.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 70.0 || root_child0.layout.height != 0.0
        ) {
          assertLayouts
            183
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 20.0, width: 70.0, height: 0.0}, root_child0.layout)]
        }
      }
    );
  it
    end_overrides
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, width: 100.0, height: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          positionType: Absolute,
          left: 20.0,
          right: 20.0,
          endd: 10.0,
          flexGrow: 0.01
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 20.0 ||
          root_child0.layout.width != 70.0 || root_child0.layout.height != 0.0
        ) {
          assertLayouts
            184
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 20.0, width: 70.0, height: 0.0}, root_child0.layout)]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 70.0 || root_child0.layout.height != 0.0
        ) {
          assertLayouts
            185
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 10.0, width: 70.0, height: 0.0}, root_child0.layout)]
        }
      }
    );
  it
    flex_shrink_to_zero
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, height: 75.0};
        let root_child0_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0, flexShrink: 0.0};
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0, flexShrink: 0.01};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, width: 50.0, height: 50.0, flexShrink: 0.0};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 50.0 ||
          root.layout.height != 75.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 50.0 ||
          root_child1.layout.top != 50.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 0.0 ||
          root_child2.layout.top != 50.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 50.0 || root_child2.layout.height != 50.0
        ) {
          assertLayouts
            186
            ({...root.layout, top: 0.0, left: 0.0, width: 50.0, height: 75.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 50.0, height: 50.0}, root_child0.layout),
              ({...root_child1.layout, top: 50.0, left: 0.0, width: 50.0, height: 0.0}, root_child1.layout),
              ({...root_child2.layout, top: 50.0, left: 0.0, width: 50.0, height: 50.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 50.0 ||
          root.layout.height != 75.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 50.0 ||
          root_child0.layout.height != 50.0 ||
          root_child1.layout.top != 50.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 50.0 ||
          root_child1.layout.height != 0.0 ||
          root_child2.layout.top != 50.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 50.0 || root_child2.layout.height != 50.0
        ) {
          assertLayouts
            187
            ({...root.layout, top: 0.0, left: 0.0, width: 50.0, height: 75.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 50.0, height: 50.0}, root_child0.layout),
              ({...root_child1.layout, top: 50.0, left: 0.0, width: 50.0, height: 0.0}, root_child1.layout),
              ({...root_child2.layout, top: 50.0, left: 0.0, width: 50.0, height: 50.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    flex_basis_overrides_main_size
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, height: 100.0, width: 100.0};
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          height: 20.0,
          flexGrow: 0.01,
          flexBasis: 50.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {...LayoutSupport.defaultStyle, height: 10.0, flexGrow: 0.01};
        let root_child1 = LayoutSupport.createNode withChildren::[||] andStyle::root_child1_style ();
        let root_child2_style = {...LayoutSupport.defaultStyle, height: 10.0, flexGrow: 0.01};
        let root_child2 = LayoutSupport.createNode withChildren::[||] andStyle::root_child2_style ();
        let root =
          LayoutSupport.createNode
            withChildren::[|root_child0, root_child1, root_child2|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 60.0 ||
          root_child1.layout.top != 60.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 ||
          root_child1.layout.height != 20.0 ||
          root_child2.layout.top != 80.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 100.0 || root_child2.layout.height != 20.0
        ) {
          assertLayouts
            188
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 60.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 60.0, left: 0.0, width: 100.0, height: 20.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 80.0, left: 0.0, width: 100.0, height: 20.0}, root_child2.layout)
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 60.0 ||
          root_child1.layout.top != 60.0 ||
          root_child1.layout.left != 0.0 ||
          root_child1.layout.width != 100.0 ||
          root_child1.layout.height != 20.0 ||
          root_child2.layout.top != 80.0 ||
          root_child2.layout.left != 0.0 ||
          root_child2.layout.width != 100.0 || root_child2.layout.height != 20.0
        ) {
          assertLayouts
            189
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 60.0}, root_child0.layout),
              (
                {...root_child1.layout, top: 60.0, left: 0.0, width: 100.0, height: 20.0},
                root_child1.layout
              ),
              ({...root_child2.layout, top: 80.0, left: 0.0, width: 100.0, height: 20.0}, root_child2.layout)
            ]
        }
      }
    );
  it
    flex_grow_shrink_at_most
    (
      fun () => {
        let root_style = {...LayoutSupport.defaultStyle, height: 100.0, width: 100.0};
        let root_child0_style = LayoutSupport.defaultStyle;
        let root_child0_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01, flexShrink: 0.01};
        let root_child0_child0 =
          LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
        let root_child0 =
          LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
        let root = LayoutSupport.createNode withChildren::[|root_child0|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 0.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 100.0 || root_child0_child0.layout.height != 0.0
        ) {
          assertLayouts
            190
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 0.0}, root_child0.layout)];
          assertLayouts
            191
            ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 0.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 0.0},
                root_child0_child0.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 100.0 ||
          root.layout.height != 100.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 0.0 ||
          root_child0.layout.width != 100.0 ||
          root_child0.layout.height != 0.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 100.0 || root_child0_child0.layout.height != 0.0
        ) {
          assertLayouts
            192
            ({...root.layout, top: 0.0, left: 0.0, width: 100.0, height: 100.0}, root.layout)
            [({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 0.0}, root_child0.layout)];
          assertLayouts
            193
            ({...root_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 0.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 100.0, height: 0.0},
                root_child0_child0.layout
              )
            ]
        }
      }
    );
  it
    bugRepro
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          alignItems: AlignAuto,
          paddingStart: 48.0,
          paddingEnd: 48.0,
          width: 1408.0,
          flexDirection: Row
        };
        let root_child0_style = LayoutSupport.defaultStyle;
        let root_child0_child0_style = LayoutSupport.defaultStyle;
        let root_child0_child0 =
          LayoutSupport.createNode withChildren::[||] andStyle::root_child0_child0_style ();
        let root_child0 =
          LayoutSupport.createNode withChildren::[|root_child0_child0|] andStyle::root_child0_style ();
        let root_child1_style = LayoutSupport.defaultStyle;
        let root_child1_child0_style = LayoutSupport.defaultStyle;
        let root_child1_child0_child0_style = LayoutSupport.defaultStyle;
        let root_child1_child0_child0 =
          LayoutSupport.createNode withChildren::[||] andStyle::root_child1_child0_child0_style ();
        let root_child1_child0 =
          LayoutSupport.createNode
            withChildren::[|root_child1_child0_child0|] andStyle::root_child1_child0_style ();
        let root_child1 =
          LayoutSupport.createNode withChildren::[|root_child1_child0|] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 1408.0 ||
          root.layout.height != 0.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 48.0 ||
          root_child0.layout.width != 0.0 ||
          root_child0.layout.height != 0.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 0.0 ||
          root_child0_child0.layout.height != 0.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 48.0 ||
          root_child1.layout.width != 0.0 ||
          root_child1.layout.height != 0.0 ||
          root_child1_child0.layout.top != 0.0 ||
          root_child1_child0.layout.left != 0.0 ||
          root_child1_child0.layout.width != 0.0 ||
          root_child1_child0.layout.height != 0.0 ||
          root_child1_child0_child0.layout.top != 0.0 ||
          root_child1_child0_child0.layout.left != 0.0 ||
          root_child1_child0_child0.layout.width != 0.0 || root_child1_child0_child0.layout.height != 0.0
        ) {
          assertLayouts
            194
            ({...root.layout, top: 0.0, left: 0.0, width: 1408.0, height: 0.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 48.0, width: 0.0, height: 0.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 48.0, width: 0.0, height: 0.0}, root_child1.layout)
            ];
          assertLayouts
            195
            ({...root_child0.layout, top: 0.0, left: 48.0, width: 0.0, height: 0.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 0.0, height: 0.0},
                root_child0_child0.layout
              )
            ];
          assertLayouts
            196
            ({...root_child1.layout, top: 0.0, left: 48.0, width: 0.0, height: 0.0}, root_child1.layout)
            [
              (
                {...root_child1_child0.layout, top: 0.0, left: 0.0, width: 0.0, height: 0.0},
                root_child1_child0.layout
              )
            ];
          assertLayouts
            197
            (
              {...root_child1_child0.layout, top: 0.0, left: 0.0, width: 0.0, height: 0.0},
              root_child1_child0.layout
            )
            [
              (
                {...root_child1_child0_child0.layout, top: 0.0, left: 0.0, width: 0.0, height: 0.0},
                root_child1_child0_child0.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 1408.0 ||
          root.layout.height != 0.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 1360.0 ||
          root_child0.layout.width != 0.0 ||
          root_child0.layout.height != 0.0 ||
          root_child0_child0.layout.top != 0.0 ||
          root_child0_child0.layout.left != 0.0 ||
          root_child0_child0.layout.width != 0.0 ||
          root_child0_child0.layout.height != 0.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 1360.0 ||
          root_child1.layout.width != 0.0 ||
          root_child1.layout.height != 0.0 ||
          root_child1_child0.layout.top != 0.0 ||
          root_child1_child0.layout.left != 0.0 ||
          root_child1_child0.layout.width != 0.0 ||
          root_child1_child0.layout.height != 0.0 ||
          root_child1_child0_child0.layout.top != 0.0 ||
          root_child1_child0_child0.layout.left != 0.0 ||
          root_child1_child0_child0.layout.width != 0.0 || root_child1_child0_child0.layout.height != 0.0
        ) {
          assertLayouts
            198
            ({...root.layout, top: 0.0, left: 0.0, width: 1408.0, height: 0.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 1360.0, width: 0.0, height: 0.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 1360.0, width: 0.0, height: 0.0}, root_child1.layout)
            ];
          assertLayouts
            199
            ({...root_child0.layout, top: 0.0, left: 1360.0, width: 0.0, height: 0.0}, root_child0.layout)
            [
              (
                {...root_child0_child0.layout, top: 0.0, left: 0.0, width: 0.0, height: 0.0},
                root_child0_child0.layout
              )
            ];
          assertLayouts
            200
            ({...root_child1.layout, top: 0.0, left: 1360.0, width: 0.0, height: 0.0}, root_child1.layout)
            [
              (
                {...root_child1_child0.layout, top: 0.0, left: 0.0, width: 0.0, height: 0.0},
                root_child1_child0.layout
              )
            ];
          assertLayouts
            201
            (
              {...root_child1_child0.layout, top: 0.0, left: 0.0, width: 0.0, height: 0.0},
              root_child1_child0.layout
            )
            [
              (
                {...root_child1_child0_child0.layout, top: 0.0, left: 0.0, width: 0.0, height: 0.0},
                root_child1_child0_child0.layout
              )
            ]
        }
      }
    );
  it
    bugRepro2
    (
      fun () => {
        let root_style = {
          ...LayoutSupport.defaultStyle,
          paddingStart: 10.0,
          paddingEnd: 10.0,
          width: 200.0,
          flexDirection: Row
        };
        let root_child0_style = {
          ...LayoutSupport.defaultStyle,
          justifyContent: JustifyFlexStart,
          width: 20.0
        };
        let root_child0 = LayoutSupport.createNode withChildren::[||] andStyle::root_child0_style ();
        let root_child1_style = {
          ...LayoutSupport.defaultStyle,
          minHeight: 0.0,
          flexDirection: Row,
          flexGrow: 0.01
        };
        let root_child1_child0_style = {...LayoutSupport.defaultStyle, flexGrow: 0.01};
        let root_child1_child0 =
          LayoutSupport.createNode withChildren::[||] andStyle::root_child1_child0_style ();
        let root_child1 =
          LayoutSupport.createNode withChildren::[|root_child1_child0|] andStyle::root_child1_style ();
        let root =
          LayoutSupport.createNode withChildren::[|root_child0, root_child1|] andStyle::root_style ();
        Layout.layoutNode root cssUndefined cssUndefined Ltr;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 200.0 ||
          root.layout.height != 0.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 10.0 ||
          root_child0.layout.width != 20.0 ||
          root_child0.layout.height != 0.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 30.0 ||
          root_child1.layout.width != 160.0 ||
          root_child1.layout.height != 0.0 ||
          root_child1_child0.layout.top != 0.0 ||
          root_child1_child0.layout.left != 0.0 ||
          root_child1_child0.layout.width != 160.0 || root_child1_child0.layout.height != 0.0
        ) {
          assertLayouts
            202
            ({...root.layout, top: 0.0, left: 0.0, width: 200.0, height: 0.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 10.0, width: 20.0, height: 0.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 30.0, width: 160.0, height: 0.0}, root_child1.layout)
            ];
          assertLayouts
            203
            ({...root_child1.layout, top: 0.0, left: 30.0, width: 160.0, height: 0.0}, root_child1.layout)
            [
              (
                {...root_child1_child0.layout, top: 0.0, left: 0.0, width: 160.0, height: 0.0},
                root_child1_child0.layout
              )
            ]
        };
        Layout.layoutNode root cssUndefined cssUndefined Rtl;
        if (
          root.layout.top != 0.0 ||
          root.layout.left != 0.0 ||
          root.layout.width != 200.0 ||
          root.layout.height != 0.0 ||
          root_child0.layout.top != 0.0 ||
          root_child0.layout.left != 170.0 ||
          root_child0.layout.width != 20.0 ||
          root_child0.layout.height != 0.0 ||
          root_child1.layout.top != 0.0 ||
          root_child1.layout.left != 10.0 ||
          root_child1.layout.width != 160.0 ||
          root_child1.layout.height != 0.0 ||
          root_child1_child0.layout.top != 0.0 ||
          root_child1_child0.layout.left != 0.0 ||
          root_child1_child0.layout.width != 160.0 || root_child1_child0.layout.height != 0.0
        ) {
          assertLayouts
            204
            ({...root.layout, top: 0.0, left: 0.0, width: 200.0, height: 0.0}, root.layout)
            [
              ({...root_child0.layout, top: 0.0, left: 170.0, width: 20.0, height: 0.0}, root_child0.layout),
              ({...root_child1.layout, top: 0.0, left: 10.0, width: 160.0, height: 0.0}, root_child1.layout)
            ];
          assertLayouts
            205
            ({...root_child1.layout, top: 0.0, left: 10.0, width: 160.0, height: 0.0}, root_child1.layout)
            [
              (
                {...root_child1_child0.layout, top: 0.0, left: 0.0, width: 160.0, height: 0.0},
                root_child1_child0.layout
              )
            ]
        }
      }
    );
  LayoutTestUtils.displayOutcomes ()
};
