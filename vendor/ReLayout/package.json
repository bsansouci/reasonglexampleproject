{
  "name": "re-layout",
  "version": "1.1.1",
  "description": "Implementation CSS layout using pure Reason - powered by css-layout project",
  "repository": {
    "type": "git",
    "url": "https://github.com/jordwalke/re-layout.git"
  },
  "keywords": [
    "css",
    "flexbox",
    "layout",
    "reason"
  ],
  "author": "",
  "license": "BSD",
  "homepage": "https://github.com/jordwalke/re-layout",
  "dependencies": {
    "@opam-alpha/ocaml": "4.02.3",
    "dependency-env": "https://github.com/reasonml/dependency-env.git",
    "js_of_ocaml-bin": "git+https://github.com/reasonml/js_of_ocaml-bin.git",
    "@opam-alpha/merlin": "2.5.0",
    "nopam": "https://github.com/reasonml/nopam.git",
    "ocamlBetterErrors": "0.0.10",
    "fastrealpath": "git+https://github.com/reasonml/FastRealPath.git",
    "reason": "https://github.com/facebook/reason.git",
    "reason-red": "git+https://github.com/jordwalke/red.git",
    "rebel": "https://github.com/reasonml/rebel.git"
  },
  "exportedEnvVars": {
    "OCAMLRUNPARAM": {
      "global": true,
      "globalCollisionBehavior": "fail",
      "val": "b"
    }
  },
  "scripts": {
    "postinstall": "npm run build",
    "thisFails": "eval $(dependencyEnv) && nopam && rebuild -I src ./src/LayoutTestFixedEncoding.native -cflags -w,-40 2>&1 | refmterr",
    "regenerateReasonSource": "eval $(dependencyEnv) && cd ../../ && grunt transpile",
    "start": "eval $(dependencyEnv) && time ./_build/src/LayoutTest.native",
    "help": "eval $(dependencyEnv) && rebuild -help",
    "stubtest": "eval $(dependencyEnv) && make test && _build/test/test",
    "stubtestbindingsperf": "eval $(dependencyEnv) && make testperf && _build/test/test",
    "clean": "eval $(dependencyEnv) && nopam && rebuild -clean",
    "top": "eval $(dependencyEnv) && rtop",
    "env": "eval $(dependencyEnv) && env",
    "editor": "eval $(dependencyEnv) && eval $EDITOR",
    "build": "eval $(dependencyEnv) && nopam && rebel -j 4 -show-actions-run-verbose -verbose -show-error-dependency-paths -brief-error-summary -show-buildable-discovery",
    "debug:test:byte": "eval $(dependencyEnv) && ./node_modules/reason-red/red.py ./_build/layoutTestFixedEncodingByte/src/app.byte",
    "test": "./_build/layoutTestFixedEncodingNative/src/app.native",
    "bench": "./_build/layoutTestFixedEncodingNative/src/app.native -quota 20",
    "test:byte": "eval $(dependencyEnv) && ./_build/layoutTestFixedEncodingByte/src/app.byte",
    "bench:byte": "./_build/layoutTestFixedEncodingByte/src/app.byte -quota 20",
    "test:jsc": "/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current/Resources/jsc --useJIT=false -e \"console = {log:print}; process = {argv: [0, 'a.out']}; \" -f ./_build/layoutTestFixedEncodingJsoo/src/app.js",
    "bench:jsc": "/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current/Resources/jsc --useJIT=false -e \"console = {log:print}; process = {argv: [0, 'a.out',  '-quota', '20']}; \" -f ./_build/layoutTestFixedEncodingJsoo/src/app.js",
    "test:jscWithJit": "/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current/Resources/jsc --useJIT=true -e \"console = {log:print}; process = {argv: [0, 'a.out']}; \" -f ./_build/layoutTestFixedEncodingJsoo/src/app.js",
    "bench:jscWithJit": "/System/Library/Frameworks/JavaScriptCore.framework/Versions/Current/Resources/jsc --useJIT=true -e \"console = {log:print}; process = {argv: [0, 'a.out',  '-quota', '20']}; \" -f ./_build/layoutTestFixedEncodingJsoo/src/app.js",
    "test:v8": "node ./_build/layoutTestFixedEncodingJsoo/src/app.js",
    "bench:v8": "node ./_build/layoutTestFixedEncodingJsoo/src/app.js -quota 20",
    "testMeasure": "./_build/measureTestFixedEncoding/src/app.native"
  },
  "notes": "The below is a temporary rebel config that only works with the hardcoded rebel used in the run scripts",
  "rebel": {
    "targets": [{
      "target": "layoutTestFixedEncodingNative",
      "engine": "native",
      "entry": "src/LayoutTestFixedEncoding.re",
      "unstable_flags": {
        "compile": "-thread -p -noassert -g -verbose -inline 100 -unsafe -S",
        "link": "-thread -p -noassert -linkpkg -g -verbose -S"
      }
    },
    {
      "target": "layoutTestFixedEncodingByte",
      "engine": "byte",
      "entry": "src/LayoutTestFixedEncoding.re",
      "unstable_flags": {
        "compile": "-thread -g -unsafe -verbose",
        "link": "-thread -noassert -g -verbose"
      }
    },
    {
      "target": "layoutTestFixedEncodingJsoo",
      "engine": "jsoo",
      "entry": "src/LayoutTestFixedEncoding.re",
      "unstable_flags": {
        "compile": "-g -verbose -unsafe -unsafe",
        "link": "-g -verbose",
        "jsoo": "--opt 3"
      }
    },
    {
      "target": "measureTestFixedEncoding",
      "engine": "native",
      "entry": "src/MeasureTestFixedEncoding.re",
      "unstable_flags": {
        "compile": "-g -verbose -inline 100 -unsafe -S",
        "link": "-verbose -S"
      }
    }]
  }
}
